for i=1 to slabPoint
    if i<slabPoint then
        i2=i+1
    else
        i2=1
    endif

    hotspot _slabPos[i][x],_slabPos[i][y],0
    lin_ _slabPos[i][x],_slabPos[i][y],0,_slabPos[i2][x],_slabPos[i2][y],0

    hotspot 0            ,slabPos[i][y],0,code,slabPos[i][x],1+128:code=code+1
    hotspot slabPos[i][x],slabPos[i][y],0,code,slabPos[i][x],2:code=code+1
    hotspot -1           ,slabPos[i][y],0,code,slabPos[i][x],3:code=code+1

    hotspot slabPos[i][x],0            ,0,code,slabPos[i][y],1+128:code=code+1
    hotspot slabPos[i][x],slabPos[i][y],0,code,slabPos[i][y],2:code=code+1
    hotspot slabPos[i][x],-1           ,0,code,slabPos[i][y],3:code=code+1
next i


!=====================================================================スラブ躯体=====================================================================!
group "slabBody"
    material mSlab

    for i=1 to slabPoint
        put _slabPos[i][x],_slabPos[i][y],0
    next i
    put _slabPos[1][x],_slabPos[1][y],-1

    extrude slabPoint+1,0,0,-slabThi,1+2+4+8+16+32,
    get(nsp)
endgroup

if disSlab then
    placegroup "slabBody"
endif


!=====================================================================配筋=====================================================================!
!上端主筋
if upperMbarNum>0 then
    for i=1 to upperMbarNum
        !頂点表示
        if disPoint then 
            for j=1 to upperMbarPoint[i]
                hotspot upperMbarPos[i][3*j-2],upperMbarPos[i][3*j-1],upperMbarPos[i][3*j]
            next j
        endif

        !中心線表示
        if disCL then
            pen upperMbarPen

            for j=1 to upperMbarPoint[i]-1
                lin_ upperMbarPos[i][3*j-2],upperMbarPos[i][3*j-1],upperMbarPos[i][3*j],upperMbarPos[i][3*j+1],upperMbarPos[i][3*j+2],upperMbarPos[i][3*j+3]
            next j
        endif

        !鉄筋表示
        if disSD then
            material upperMbarMat

            tube_r=upperMbarOd/2
            gosub "鉄筋断面計算sub"

            put 2*upperMbarPos[i][1]-upperMbarPos[i][4],2*upperMbarPos[i][2]-upperMbarPos[i][5],2*upperMbarPos[i][3]-upperMbarPos[i][6],0
            for j=1 to upperMbarPoint[i]
                put upperMbarPos[i][3*j-2],upperMbarPos[i][3*j-1],upperMbarPos[i][3*j],0
            next j
            put 2*upperMbarPos[i][3*upperMbarPoint[i]-2]-upperMbarPos[i][3*upperMbarPoint[i]-5],2*upperMbarPos[i][3*upperMbarPoint[i]-1]-upperMbarPos[i][3*upperMbarPoint[i]-4],\
                2*upperMbarPos[i][3*upperMbarPoint[i]]-upperMbarPos[i][3*upperMbarPoint[i]-3],0

            tube SDresol+1,upperMbarPoint[i]+2,1+2+16+32+64,
            get (nsp)
        endif
    next i
endif


!上端配力筋
if upperDbarNum>0 then
    for i=1 to upperDbarNum
        !頂点表示
        if disPoint then 
            for j=1 to upperDbarPoint[i]
                hotspot upperDbarPos[i][3*j-2],upperDbarPos[i][3*j-1],upperDbarPos[i][3*j]
            next j
        endif

        !中心線表示
        if disCL then
            pen upperDbarPen

            for j=1 to upperDbarPoint[i]-1
                lin_ upperDbarPos[i][3*j-2],upperDbarPos[i][3*j-1],upperDbarPos[i][3*j],upperDbarPos[i][3*j+1],upperDbarPos[i][3*j+2],upperDbarPos[i][3*j+3]
            next j
        endif

        !鉄筋表示
        if disSD then
            material upperDbarMat

            tube_r=upperDbarOd/2
            gosub "鉄筋断面計算sub"

            put 2*upperDbarPos[i][1]-upperDbarPos[i][4],2*upperDbarPos[i][2]-upperDbarPos[i][5],2*upperDbarPos[i][3]-upperDbarPos[i][6],0
            for j=1 to upperDbarPoint[i]
                put upperDbarPos[i][3*j-2],upperDbarPos[i][3*j-1],upperDbarPos[i][3*j],0
            next j
            put 2*upperDbarPos[i][3*upperDbarPoint[i]-2]-upperDbarPos[i][3*upperDbarPoint[i]-5],2*upperDbarPos[i][3*upperDbarPoint[i]-1]-upperDbarPos[i][3*upperDbarPoint[i]-4],\
                2*upperDbarPos[i][3*upperDbarPoint[i]]-upperDbarPos[i][3*upperDbarPoint[i]-3],0

            tube SDresol+1,upperDbarPoint[i]+2,1+2+16+32+64,
            get (nsp)
        endif
    next i
endif


!下端主筋
if lowerMbarNum>0 then
    for i=1 to lowerMbarNum
        !頂点表示
        if disPoint then 
            for j=1 to lowerMbarPoint[i]
                hotspot lowerMbarPos[i][3*j-2],lowerMbarPos[i][3*j-1],lowerMbarPos[i][3*j]
            next j
        endif

        !中心線表示
        if disCL then
            pen lowerMbarPen

            for j=1 to lowerMbarPoint[i]-1
                lin_ lowerMbarPos[i][3*j-2],lowerMbarPos[i][3*j-1],lowerMbarPos[i][3*j],lowerMbarPos[i][3*j+1],lowerMbarPos[i][3*j+2],lowerMbarPos[i][3*j+3]
            next j
        endif

        !鉄筋表示
        if disSD then
            material lowerMbarMat

            tube_r=lowerMbarOd/2
            gosub "鉄筋断面計算sub"

            put 2*lowerMbarPos[i][1]-lowerMbarPos[i][4],2*lowerMbarPos[i][2]-lowerMbarPos[i][5],2*lowerMbarPos[i][3]-lowerMbarPos[i][6],0
            for j=1 to lowerMbarPoint[i]
                put lowerMbarPos[i][3*j-2],lowerMbarPos[i][3*j-1],lowerMbarPos[i][3*j],0
            next j
            put 2*lowerMbarPos[i][3*lowerMbarPoint[i]-2]-lowerMbarPos[i][3*lowerMbarPoint[i]-5],2*lowerMbarPos[i][3*lowerMbarPoint[i]-1]-lowerMbarPos[i][3*lowerMbarPoint[i]-4],\
                2*lowerMbarPos[i][3*lowerMbarPoint[i]]-lowerMbarPos[i][3*lowerMbarPoint[i]-3],0

            tube SDresol+1,lowerMbarPoint[i]+2,1+2+16+32+64,
            get (nsp)
        endif
    next i
endif


!下端配力筋
if lowerDbarNum>0 then
    for i=1 to lowerDbarNum
        !頂点表示
        if disPoint then 
            for j=1 to lowerDbarPoint[i]
                hotspot lowerDbarPos[i][3*j-2],lowerDbarPos[i][3*j-1],lowerDbarPos[i][3*j]
            next j
        endif

        !中心線表示
        if disCL then
            pen lowerDbarPen

            for j=1 to lowerDbarPoint[i]-1
                lin_ lowerDbarPos[i][3*j-2],lowerDbarPos[i][3*j-1],lowerDbarPos[i][3*j],lowerDbarPos[i][3*j+1],lowerDbarPos[i][3*j+2],lowerDbarPos[i][3*j+3]
            next j
        endif

        !鉄筋表示
        if disSD then
            material lowerDbarMat

            tube_r=lowerDbarOd/2
            gosub "鉄筋断面計算sub"

            put 2*lowerDbarPos[i][1]-lowerDbarPos[i][4],2*lowerDbarPos[i][2]-lowerDbarPos[i][5],2*lowerDbarPos[i][3]-lowerDbarPos[i][6],0
            for j=1 to lowerDbarPoint[i]
                put lowerDbarPos[i][3*j-2],lowerDbarPos[i][3*j-1],lowerDbarPos[i][3*j],0
            next j
            put 2*lowerDbarPos[i][3*lowerDbarPoint[i]-2]-lowerDbarPos[i][3*lowerDbarPoint[i]-5],2*lowerDbarPos[i][3*lowerDbarPoint[i]-1]-lowerDbarPos[i][3*lowerDbarPoint[i]-4],\
                2*lowerDbarPos[i][3*lowerDbarPoint[i]]-lowerDbarPos[i][3*lowerDbarPoint[i]-3],0

            tube SDresol+1,lowerDbarPoint[i]+2,1+2+16+32+64,
            get (nsp)
        endif
    next i
endif


!端部コの字筋
if edgeBarNum>0 then
    for i=1 to edgeBarNum
        !頂点表示
        if disPoint then 
            for j=1 to edgeBarPoint[i]
                hotspot edgeBarPos[i][3*j-2],edgeBarPos[i][3*j-1],edgeBarPos[i][3*j]
            next j
        endif

        !中心線表示
        if disCL then
            pen edgeBarPen[i]

            for j=1 to edgeBarPoint[i]-1
                lin_ edgeBarPos[i][3*j-2],edgeBarPos[i][3*j-1],edgeBarPos[i][3*j],edgeBarPos[i][3*j+1],edgeBarPos[i][3*j+2],edgeBarPos[i][3*j+3]
            next j
        endif

        !鉄筋表示
        if disSD then
            material edgeBarMat[i]

            tube_r=edgeBarOd[i]/2
            gosub "鉄筋断面計算sub"

            put 2*edgeBarPos[i][1]-edgeBarPos[i][4],2*edgeBarPos[i][2]-edgeBarPos[i][5],2*edgeBarPos[i][3]-edgeBarPos[i][6],0
            for j=1 to edgeBarPoint[i]
                put edgeBarPos[i][3*j-2],edgeBarPos[i][3*j-1],edgeBarPos[i][3*j],0
            next j
            put 2*edgeBarPos[i][3*edgeBarPoint[i]-2]-edgeBarPos[i][3*edgeBarPoint[i]-5],2*edgeBarPos[i][3*edgeBarPoint[i]-1]-edgeBarPos[i][3*edgeBarPoint[i]-4],\
                2*edgeBarPos[i][3*edgeBarPoint[i]]-edgeBarPos[i][3*edgeBarPoint[i]-3],0

            tube SDresol+1,edgeBarPoint[i]+2,1+2+16+32+64,
            get (nsp)
        endif
    next i
endif


















end


!==========================================鉄筋断面座標リスト
"鉄筋断面計算sub":

	for t=1 to SDresol
		put tube_r*cos((1-t)*360/SDresol),tube_r*sin((1-t)*360/SDresol),0
	next t
	
	put tube_r,0,0

return