code=1
eps=1e-5
x=1
y=2
z=3
absx=len-sqr(coo_end[1]^2+coo_end[2]^2)

if interface_f1 then
	lock all "wall","switch_jiku","switch_san","switch_c","m_c","c_pitch","c_wid","c_turn","roof_cut","switch_deck","m_deck","opening","win_ref","beam_ref","board","part",\
		"fire_resistance1","fire_resistance2","switch_pillar","switch_seal","switch_soundseal","num_seal","num_seal2","switch_sound","display_board","display_boardspot","switch_board",\
		"num_board","thi_board","type_board","offset_up","offset_down","switch_board2","num_board2","thi_board2","type_board2","offset_up2","offset_down2","panel","display_panel",\
		"display_panelspot","switch_molding","switch_panel","type_panel","thi_panel","size_panel","offset_start_p","offset_end_p","offset_up_p","offset_down_p","switch_panel2",\
		"type_panel2","thi_panel2","size_panel2","offset_start_p2","offset_end_p2","offset_up_p2","offset_down_p2","express2D","switch_jiku2d","switch_detail","switch_sound2d",\
		"fill_sound","switch_ref_win","switch_ref_beam","switch_ref_detail","display_board2D","display_boardspot2D","display_panel2D","display_panelspot2D","switch_board_detail",\
		"estimate","interface_f1","type","pitch","hei","size_board","size_board2","seal1_l","seal1_r","seal1_u","seal1_d","seal2_l","seal2_r","seal2_u","seal2_d","type_board_1","type_board_2","type_board_3","thi_board_1","thi_board_2","thi_board_3",\
		"type_board2_1","type_board2_2","type_board2_3","thi_board2_1","thi_board2_2","thi_board2_3","soundseal1_l","soundseal1_r","soundseal1_u","soundseal1_d","soundseal2_l","soundseal2_r","soundseal2_u","soundseal2_d"

	hideparameter "interface_f1"
endif


!================================================================================壁長さと回転角
len=sqr((coo_end[1]-coo_start[1])^2+(coo_end[2]-coo_start[2])^2)
parameters len=len
lock "len"

if coo_end[2]>coo_start[2] then
	angle=acs((coo_end[1]-coo_start[1])/len)
endif
if coo_end[2]<coo_start[2] then
	angle=-acs((coo_end[1]-coo_start[1])/len)
endif
if coo_end[2]=coo_start[2] then
	if coo_end[1]>=coo_start[1] then
		angle=0.00
	endif
	if coo_end[1]<coo_start[1] then
		angle=180.00
	endif
endif
parameters angle=angle


!================================================================================軸寸法
values "wid_jiku" range(0,)
values "wid2_jiku" range(0,)
values "wid_side" range(0,)

values{2} "pitch" 0.910/3,"303",0.455,"455"
values{2} "start_type" 1,"柱",2,"柱+間柱",3,"柱+小柱R",4,"柱+小柱L",5,"間柱",6,"間柱*3"
values{2} "end_type" 1,"柱",2,"柱+間柱",3,"柱+小柱R",4,"柱+小柱L",5,"間柱",6,"間柱*3"
if start_type<>3 and start_type<>4 and end_type<>3 and end_type<>4 then hideparameter "wid_side"
parameters pitch_san=1.82

if start_type=1 then start_pos=wid_jiku/2
if start_type=2 then start_pos=wid_jiku+wid2_jiku/2
if start_type=3 then start_pos=wid_jiku+wid2_jiku/2
if start_type=4 then start_pos=wid_jiku+wid2_jiku/2
if start_type=5 then start_pos=wid2_jiku/2
if start_type=6 then start_pos=2*wid2_jiku+wid2_jiku/2

if end_type=1 then end_pos=wid_jiku/2
if end_type=2 then end_pos=wid_jiku/2
if end_type=3 then end_pos=wid_jiku/2
if end_type=4 then end_pos=wid_jiku/2
if end_type=5 then end_pos=wid2_jiku/2
if end_type=6 then end_pos=3*wid2_jiku/2

type_text="軸組 "+str(wid_jiku*1000,1,0)+"x"+str(wid2_jiku*1000,1,0)
pitch_text="@"+str(pitch*1000,1,0)

parameters \
type_text=type_text,
pitch_text=pitch_text


!================================================================================柱位置
num_jiku=max(ceil((len-start_pos-end_pos)/pitch)-1,0)
parameters num_jiku=num_jiku
lock "num_jiku"

if switch_jiku=0 then
	x1_jiku=start_pos
	
	for i=1 to num_jiku
    	x1_jiku=x1_jiku+pitch
		coo_jiku[i]=x1_jiku
	next i
else
	for i=1 to num_jiku
		coo_jiku[i]=coo_jiku[i]
	next i
endif

parameters coo_jiku=coo_jiku

!端部柱本数
num_column=0
dim _column_coo[]
_column_coo[1]=0

num_sjiku=0
dim _sjiku_coo[]
_sjiku_coo[1]=0

start_jiku=0
dim _start_jiku_coo[]
_start_jiku_coo[1]=0

if start_type=1 then
	num_column=num_column+1
	_column_coo[num_column]=wid_jiku/2
endif

if start_type=2 then
	num_column=num_column+1
	_column_coo[num_column]=wid_jiku/2
	start_jiku=start_jiku+1
	_start_jiku_coo[start_jiku]=wid_jiku+wid2_jiku/2
endif

if start_type=3 then
	num_column=num_column+1
	_column_coo[num_column]=wid_jiku/2
	num_sjiku=num_sjiku+1
	_sjiku_coo[num_sjiku]=wid_jiku+wid2_jiku/2
endif

if start_type=4 then
	num_column=num_column+1
	_column_coo[num_column]=wid_jiku/2
	num_sjiku=num_sjiku+1
	_sjiku_coo[num_sjiku]=wid_jiku+wid2_jiku/2
endif

if start_type=5 then
	start_jiku=start_jiku+1
	_start_jiku_coo[start_jiku]=wid2_jiku/2
endif

if start_type=6 then
	start_jiku=start_jiku+1
	_start_jiku_coo[start_jiku]=wid2_jiku/2
	start_jiku=start_jiku+1
	_start_jiku_coo[start_jiku]=wid2_jiku+wid2_jiku/2
	start_jiku=start_jiku+1
	_start_jiku_coo[start_jiku]=2*wid2_jiku+wid2_jiku/2
endif

end_jiku=0
dim _end_jiku_coo[]
_end_jiku_coo[1]=0

if end_type=1 then
	num_column=num_column+1
	_column_coo[num_column]=len-wid_jiku/2
endif

if end_type=2 then
	num_column=num_column+1
	_column_coo[num_column]=len-wid_jiku/2
	end_jiku=end_jiku+1
	_end_jiku_coo[end_jiku]=len-wid_jiku-wid2_jiku/2
endif

if end_type=3 then
	num_column=num_column+1
	_column_coo[num_column]=len-wid_jiku/2
	num_sjiku=num_sjiku+1
	_sjiku_coo[num_sjiku]=len-wid_jiku-wid2_jiku/2
endif

if end_type=4 then
	num_column=num_column+1
	_column_coo[num_column]=len-wid_jiku/2
	num_sjiku=num_sjiku+1
	_sjiku_coo[num_sjiku]=len-wid_jiku-wid2_jiku/2
endif

if end_type=5 then
	end_jiku=end_jiku+1
	_end_jiku_coo[end_jiku]=len-wid2_jiku/2
endif

if end_type=6 then
	end_jiku=end_jiku+1
	_end_jiku_coo[end_jiku]=len-2*wid2_jiku-wid2_jiku/2
	end_jiku=end_jiku+1
	_end_jiku_coo[end_jiku]=len-wid2_jiku-wid2_jiku/2
	end_jiku=end_jiku+1
	_end_jiku_coo[end_jiku]=len-wid2_jiku/2
endif

!柱
parameters num_column=num_column

!小柱
parameters num_sjiku=num_sjiku

!間柱
num_jiku2=start_jiku+num_jiku+end_jiku
parameters num_jiku2=num_jiku2

dim _coo_jiku2[]
for i=1 to start_jiku+num_jiku+end_jiku
	if i<=start_jiku then
		_coo_jiku2[i]=_start_jiku_coo[i]
	endif

	if i>start_jiku and i<=start_jiku+num_jiku then
		_coo_jiku2[i]=coo_jiku[i-start_jiku]
	endif

	if i>start_jiku+num_jiku then
		_coo_jiku2[i]=_end_jiku_coo[i-(start_jiku+num_jiku)]
	endif
next i


!==============================================================================================================開口設定
if switch_op then
	values "win_num" range[1,]

	for i=1 to win_num
		parameters win_type[i]=win_type[i]
		parameters win_xz[i][1]=win_xz[i][1]
		parameters win_xz[i][2]=win_xz[i][2]
		parameters win_wid[i]=win_wid[i]
		parameters win_hei[i]=win_hei[i]
		parameters win_ref[i]=win_ref[i]
	next i
else
    win_num=0
	parameters win_num=win_num
	hideparameter "win_type","win_xz","win_wid","win_hei","win_num","win_ref","offset_door1","offset_door2"
endif

values{2} "win_ref" 1,"あり",2,"なし"
values{2} "win_type" 1,"扉",2,"窓"

for i=1 to win_num
	if win_type[i]=1 then
		if win_xz[i][2]>0 then parameters win_xz[i][2]=0
	endif
next i


!==========================================================開口実寸
if switch_op then
	for i=1 to win_num
		if win_type[i]=1 then
			win_xz2[i][1]=win_xz[i][1]-offset_door1
			win_xz2[i][2]=win_xz[i][2]
			win_wid2[i]=win_wid[i]+2*offset_door1
			win_hei2[i]=win_hei[i]+offset_door2
		endif
		if win_type[i]=2 then
			win_xz2[i][1]=win_xz[i][1]-offset_jiku1
			win_xz2[i][2]=win_xz[i][2]-offset_jiku3
			win_wid2[i]=win_wid[i]+2*offset_jiku1
			win_hei2[i]=win_hei[i]+offset_jiku2+offset_jiku3
		endif
	next i
endif

parameters \
win_xz2=win_xz2,
win_wid2=win_wid2,
win_hei2=win_hei2


!==============================================================================================================梁開口設定
if switch_beam then
	values "beam_num" range[1,]

	for i=1 to beam_num
		parameters beam_x[i]=beam_x[i]
		parameters beam_wid[i]=beam_wid[i]
		parameters beam_hei[i]=beam_hei[i]
		parameters beam_ref[i][1]=beam_ref[i][1]
		parameters beam_ref[i][2]=beam_ref[i][2]
	next i
else
    beam_num=0
	parameters beam_num=beam_num
	hideparameter "beam_num","beam_x","beam_wid","beam_hei","beam_ref"
endif

values{2} "beam_ref" 1,"あり",2,"なし"


!==============================================================================================================段差設定
if switch_floor then
	values "floor_num" range[1,]

	for i=1 to floor_num
		parameters floor_x[i]=floor_x[i]
		parameters floor_wid[i]=floor_wid[i]
		parameters floor_hei[i]=floor_hei[i]
	next i
else
	floor_num=0
    parameters floor_num=floor_num
	hideparameter "floor_num","floor_x","floor_wid","floor_hei"
endif


!==============================================================================================================ボード設定
values{2} "part" 1,"間仕切",2,"区画間仕切",3,"二重壁",4,"下がり天井",5,"下がり壁",6,"腰壁"
values{2} "fire_resistance1" 1,"一般",2,"下地共不燃",3,"下地共準不燃",4,"不燃",5,"準不燃"
values{2} "fire_resistance2" 1,"一般",2,"下地共不燃",3,"下地共準不燃",4,"不燃",5,"準不燃"

if fire_resistance1=1 then txt_fire1="一般"
if fire_resistance1=2 then txt_fire1="下地共不燃"
if fire_resistance1=3 then txt_fire1="下地共準不燃"
if fire_resistance1=4 then txt_fire1="不燃"
if fire_resistance1=5 then txt_fire1="準不燃"

if fire_resistance2=1 then txt_fire2="一般"
if fire_resistance2=2 then txt_fire2="下地共不燃"
if fire_resistance2=3 then txt_fire2="下地共準不燃"
if fire_resistance2=4 then txt_fire2="不燃"
if fire_resistance2=5 then txt_fire2="準不燃"

parameters \
txt_fire1=txt_fire1,
txt_fire2=txt_fire2

if switch_board then
	values "num_board" range[1,3]

	for i=1 to num_board
		parameters offset_start[i]=offset_start[i]
		parameters offset_end[i]=offset_end[i]
		parameters offset_up[i]=offset_up[i]
		parameters offset_down[i]=offset_down[i]
		parameters txt_type_board1[i]=""
	next i

	values{2} "thi_board" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
	if num_board>0 then
		values{2} "thi_board_1" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board[1]=thi_board_1
	endif
	if num_board>1 then
		values{2} "thi_board_2" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board[2]=thi_board_2
	endif
	if num_board>2 then
		values{2} "thi_board_3" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board[3]=thi_board_3
	endif
	
	values{2} "type_board" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
	if num_board>0 then
		values{2} "type_board_1" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board[1]=type_board_1
	endif
	if num_board>1 then
		values{2} "type_board_2" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board[2]=type_board_2
	endif
	if num_board>2 then
		values{2} "type_board_3" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board[3]=type_board_3
	endif

	values{2} "thi_board" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"

	values{2} "type_board" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"

	values{2} "size_board" 1,"3x6版",2,"3x8版",3,"3x9版",4,"メートル版",5,"2x6版"

	for i=1 to num_board
		if type_board[i]=1 then txt_type_board1[i]="GB-R"
		if type_board[i]=2 then txt_type_board1[i]="K"
		if type_board[i]=3 then txt_type_board1[i]="GB-R-H"
		if type_board[i]=4 then txt_type_board1[i]="GB-S"
		if type_board[i]=5 then txt_type_board1[i]="GB-F"
		if type_board[i]=6 then txt_type_board1[i]="GB-St-A・B"
		if type_board[i]=7 then txt_type_board1[i]="GB-L"
		if type_board[i]=8 then txt_type_board1[i]="GB-D"
		if type_board[i]=9 then txt_type_board1[i]="GB-NC"
		if type_board[i]=10 then txt_type_board1[i]="GB-Hc"
	next i

    parameters txt_type_board1=txt_type_board1

	if size_board=1 then
		wid_bo=0.91
		hei_bo=1.82
	endif
	
	if size_board=2 then
		wid_bo=0.91
		hei_bo=2.42
	endif
	
	if size_board=3 then
		wid_bo=0.91
		hei_bo=2.73
	endif
	
	if size_board=4 then
		wid_bo=1
		hei_bo=2
	endif

	if size_board=5 then
		wid_bo=0.606
		hei_bo=1.82
	endif

    parameters \
    wid_bo=wid_bo,
    hei_bo=hei_bo
else
	parameters num_board=0
	parameters num_seal=0
	values{2} "thi_board" 0,""
	values{2} "type_board" 0,""
	parameters seal1_l=0
	parameters seal1_r=0
	parameters seal1_u=0
	parameters seal1_d=0
	parameters soundseal1_l=0
	parameters soundseal1_r=0
	parameters soundseal1_u=0
	parameters soundseal1_d=0
	lock "size_board","offset_start","offset_end","offset_up","offset_down","switch_joiner","seal1_l","seal1_r","seal1_u","seal1_d","num_board","num_seal","soundseal1_l","soundseal1_r","soundseal1_u","soundseal1_d"
	hideparameter "thi_board","type_board","size_board","offset_start","offset_end","offset_up","offset_down","switch_joiner","num_board"
endif

if num_board<3 then
	values{2} "thi_board_3" 0,""
	values{2} "type_board_3" 0,""
	lock "thi_board_3","type_board_3"
	hideparameter "thi_board_3","type_board_3"
endif

if num_board<2 then
	values{2} "thi_board_2" 0,""
	values{2} "type_board_2" 0,""
	lock "thi_board_2","type_board_2"
	hideparameter "thi_board_2","type_board_2"
endif

if num_board<1 then
	values{2} "thi_board_1" 0,""
	values{2} "type_board_1" 0,""
	lock "thi_board_1","type_board_1"
	hideparameter "thi_board_1","type_board_1"
endif

if switch_board2 then

	values "num_board2" range[1,3]

	for i=1 to num_board2
		parameters offset_start2[i]=offset_start2[i]
		parameters offset_end2[i]=offset_end2[i]
		parameters offset_up2[i]=offset_up2[i]
		parameters offset_down2[i]=offset_down2[i]
		parameters txt_type_board2[i]=""
	next i

	values{2} "thi_board2" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
	if num_board2>0 then
		values{2} "thi_board2_1" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board2[1]=thi_board2_1
	endif
	if num_board2>1 then
		values{2} "thi_board2_2" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board2[2]=thi_board2_2
	endif
	if num_board2>2 then
		values{2} "thi_board2_3" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board2[3]=thi_board2_3
	endif
	
	values{2} "type_board2" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
	if num_board2>0 then
		values{2} "type_board2_1" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board2[1]=type_board2_1
	endif
	if num_board2>1 then
		values{2} "type_board2_2" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board2[2]=type_board2_2
	endif
	if num_board2>2 then
		values{2} "type_board2_3" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board2[3]=type_board2_3
	endif

	values{2} "size_board2" 1,"3x6版",2,"3x8版",3,"3x9版",4,"メートル版",5,"2x6版"
	
	for i=1 to num_board2
		if type_board2[i]=1 then txt_type_board2[i]="GB-R"
		if type_board2[i]=2 then txt_type_board2[i]="K"
		if type_board2[i]=3 then txt_type_board2[i]="GB-R-H"
		if type_board2[i]=4 then txt_type_board2[i]="GB-S"
		if type_board2[i]=5 then txt_type_board2[i]="GB-F"
		if type_board2[i]=6 then txt_type_board2[i]="GB-St-A・B"
		if type_board2[i]=7 then txt_type_board2[i]="GB-L"
		if type_board2[i]=8 then txt_type_board2[i]="GB-D"
		if type_board2[i]=9 then txt_type_board2[i]="GB-NC"
		if type_board2[i]=10 then txt_type_board2[i]="GB-Hc"
	next i

    parameters txt_type_board2=txt_type_board2

	if size_board2=1 then
		wid_bo2=0.91
		hei_bo2=1.82
	endif
	
	if size_board2=2 then
		wid_bo2=0.91
		hei_bo2=2.42
	endif
	
	if size_board2=3 then
		wid_bo2=0.91
		hei_bo2=2.73
	endif
	
	if size_board2=4 then
		wid_bo2=1
		hei_bo2=2
	endif

	if size_board2=5 then
		wid_bo2=0.606
		hei_bo2=1.82
	endif

    parameters \
    wid_bo2=wid_bo2,
    hei_bo2=hei_bo2
else
	parameters num_board2=0
	parameters num_seal2=0
	values{2} "thi_board2" 0,""
	values{2} "type_board2" 0,""
	parameters seal2_l=0
	parameters seal2_r=0
	parameters seal2_u=0
	parameters seal2_d=0
	parameters soundseal2_l=0
	parameters soundseal2_r=0
	parameters soundseal2_u=0
	parameters soundseal2_d=0
	lock "size_board2","offset_start2","offset_end2","offset_up2","offset_down2","switch_joiner2","seal2_l","seal2_r","seal2_u","seal2_d","num_board2","num_seal2","soundseal2_l","soundseal2_r","soundseal2_u","soundseal2_d"
	hideparameter "thi_board2","type_board2","size_board2","offset_start2","offset_end2","offset_up2","offset_down2","switch_joiner2","num_board2"
endif

if num_board2<3 then
	values{2} "thi_board2_3" 0,""
	values{2} "type_board2_3" 0,""
	lock "thi_board2_3","type_board2_3"
	hideparameter "thi_board2_3","type_board2_3"
endif

if num_board2<2 then
	values{2} "thi_board2_2" 0,""
	values{2} "type_board2_2" 0,""
	lock "thi_board2_2","type_board2_2"
	hideparameter "thi_board2_2","type_board2_2"
endif

if num_board2<1 then
	values{2} "thi_board2_1" 0,""
	values{2} "type_board2_1" 0,""
	lock "thi_board2_1","type_board2_1"
	hideparameter "thi_board2_1","type_board2_1"
endif

!==============================================================================================================シール設定
switch_seal[1][1]=seal1_l
switch_seal[1][2]=seal1_r
switch_seal[1][3]=seal1_u
switch_seal[1][4]=seal1_d
switch_seal[2][1]=seal2_l
switch_seal[2][2]=seal2_r
switch_seal[2][3]=seal2_u
switch_seal[2][4]=seal2_d

switch_soundseal[1][1]=soundseal1_l
switch_soundseal[1][2]=soundseal1_r
switch_soundseal[1][3]=soundseal1_u
switch_soundseal[1][4]=soundseal1_d
switch_soundseal[2][1]=soundseal2_l
switch_soundseal[2][2]=soundseal2_r
switch_soundseal[2][3]=soundseal2_u
switch_soundseal[2][4]=soundseal2_d

parameters \
switch_seal=switch_seal,
switch_soundseal=switch_soundseal

if switch_board then
	values "num_seal" range[1,num_board]
	if part=2 and switch_sound then parameters num_seal=num_board
else
	hideparameter "num_seal"
endif

if switch_board2 then
	values "num_seal2" range[1,num_board2]
	if part=2 and switch_sound then parameters num_seal2=num_board2
else
	hideparameter "num_seal2"
endif


!==============================================================================================================上端傾斜設定
if roof_cut then
	values "offset_up" range[0,0]
	values "offset_up2" range[0,0]
else
	hideparameter "cut_xzL","cut_xzR"
endif

values "cut_xzL" range[0,]
values "cut_xzR" range[0,]

if cut_xzL[1][1]>len then parameters cut_xzL[1][1]=len
if cut_xzR[1][1]>len-cut_xzL[1][1] then parameters cut_xzR[1][1]=len-cut_xzL[1][1]
if cut_xzL[1][2]>hei then parameters cut_xzL[1][2]=hei
if cut_xzR[1][2]>hei then parameters cut_xzR[1][2]=hei


!==============================================================================================================化粧板設定
if switch_panel then
	values{2} "type_panel" 1,"キッチンパネル",2,"不燃化粧板",3,"メラミン化粧板",4,"化粧ケイカル(目透)",5,"化粧ケイカル(突付)",6,"グラスウールボード"

	if type_panel=1 then txt_type_panel1="キッチンパネル"
	if type_panel=2 then txt_type_panel1="不燃化粧板"
	if type_panel=3 then txt_type_panel1="メラミン化粧板"
	if type_panel=4 then txt_type_panel1="化粧ケイカル(目透)"
	if type_panel=5 then txt_type_panel1="化粧ケイカル(突付)"
	if type_panel=6 then txt_type_panel1="グラスウールボード"

    parameters txt_type_panel1=txt_type_panel1
	
	if type_panel=1 then
		values{2} "thi_panel" 0.003,"3mm"
		values{2} "size_panel" 1,"3x6",2,"3x8",3,"3x9",4,"4x8"
	endif
	
	if type_panel=2 then
		values{2} "thi_panel" 0.003,"3mm",0.004,"4mm",0.006,"6mm",0.0145,"14.5mm"
		values{2} "size_panel" 0,"900*900",1,"3x6",2,"3x8",3,"3x9"
	endif
	
	if type_panel=3 then
		values{2} "thi_panel" 0.00095,"0.95mm",0.0012,"1.2mm"
		values{2} "size_panel" 1,"3x6",4,"4x8"
	endif
	
	if type_panel=4 or type_panel=5 then
		values{2} "thi_panel" 0.006,"6mm"
		values{2} "size_panel" 1,"3x6",2,"3x8",3,"3x9"
	endif
	
	if type_panel=6 then
		values{2} "thi_panel" 0.025,"25mm",0.05,"50mm"
		values{2} "size_panel" 6,"605*910",1,"3x6"
	endif
	
	if size_panel=0 then 
		wid_panel=0.9
		hei_panel=0.9
	endif
	
	if size_panel=1 then 
		wid_panel=0.91
		hei_panel=1.82
	endif
	
	if size_panel=2 then 
		wid_panel=0.91
		hei_panel=2.42
	endif
	
	if size_panel=3 then 
		wid_panel=0.91
		hei_panel=2.73
	endif
	
	if size_panel=4 then 
		wid_panel=1.21
		hei_panel=2.42
	endif
	
	if size_panel=6 then 
		wid_panel=0.605
		hei_panel=0.91
	endif

    parameters \
    wid_panel=wid_panel,
    hei_panel=hei_panel
else
	values{2} "type_panel" 0,""
	values{2} "thi_panel" 0,""
	values{2} "size_panel" 0,""
	hideparameter "type_panel","thi_panel","size_panel","offset_start_p","offset_end_p","offset_up_p","offset_down_p"
	lock "type_panel","thi_panel","size_panel","offset_start_p","offset_end_p","offset_up_p","offset_down_p"
endif

if switch_panel2 then
	values{2} "type_panel2" 1,"キッチンパネル",2,"不燃化粧板",3,"メラミン化粧板",4,"化粧ケイカル(目透)",5,"化粧ケイカル(突付)",6,"グラスウールボード"
	
	if type_panel2=1 then txt_type_panel2="キッチンパネル"
	if type_panel2=2 then txt_type_panel2="不燃化粧板"
	if type_panel2=3 then txt_type_panel2="メラミン化粧板"
	if type_panel2=4 then txt_type_panel2="化粧ケイカル(目透)"
	if type_panel2=5 then txt_type_panel2="化粧ケイカル(突付)"
	if type_panel2=6 then txt_type_panel2="グラスウールボード"

    parameters txt_type_panel2=txt_type_panel2
	
	if type_panel2=1 then
		values{2} "thi_panel2" 0.003,"3mm"
		values{2} "size_panel2" 1,"3x6",2,"3x8",3,"3x9",4,"4x8"
	endif
	
	if type_panel2=2 then
		values{2} "thi_panel2" 0.003,"3mm",0.004,"4mm",0.006,"6mm",0.0145,"14.5mm"
		values{2} "size_panel2" 0,"900*900",1,"3x6",2,"3x8",3,"3x9"
	endif
	
	if type_panel2=3 then
		values{2} "thi_panel2" 0.00095,"0.95mm",0.0012,"1.2mm"
		values{2} "size_panel2" 1,"3x6",4,"4x8"
	endif
	
	if type_panel2=4 or type_panel2=5 then
		values{2} "thi_panel2" 0.006,"6mm"
		values{2} "size_panel2" 1,"3x6",2,"3x8",3,"3x9"
	endif
	
	if type_panel2=6 then
		values{2} "thi_panel2" 0.025,"25mm",0.05,"50mm"
		values{2} "size_panel2" 6,"605*910",1,"3x6"
	endif
	
	if size_panel2=0 then 
		wid_panel2=0.9
		hei_panel2=0.9
	endif
	
	if size_panel2=1 then 
		wid_panel2=0.91		
		hei_panel2=1.82
	endif
	
	if size_panel2=2 then 
		wid_panel2=0.91
		hei_panel2=2.42
	endif
	
	if size_panel2=3 then 
		wid_panel2=0.91
		hei_panel2=2.73
	endif
	
	if size_panel2=4 then 
		wid_panel2=1.21
		hei_panel2=2.42
	endif
	
	if size_panel2=6 then 
		wid_panel2=0.605
		hei_panel2=0.91
	endif

    parameters \
    wid_panel2=wid_panel2,
    hei_panel2=hei_panel2
else
	values{2} "type_panel2" 0,""
	values{2} "thi_panel2" 0,""
	values{2} "size_panel2" 0,""
	hideparameter "type_panel2","thi_panel2","size_panel2","offset_start_p2","offset_end_p2","offset_up_p2","offset_down_p2"
	lock "type_panel2","thi_panel2","size_panel2","offset_start_p2","offset_end_p2","offset_up_p2","offset_down_p2"
endif


!==============================================================================================================Cチャンネル
values{2} "c_turn" 1,"水平",2,"垂直"

values{2} "c_pitch" 0.9,"900",0.7,"700"

if switch_c=0 then
	hideparameter "m_c","c_pitch","c_x","c_turn","c_wid"
endif

c_num=ceil(len/c_pitch)-1
parameters c_num=c_num

c_x0=0

for i=1 to c_num
	c_x0=c_x0+c_pitch
	c_x[i]=c_x0
next i

parameters c_x=c_x
