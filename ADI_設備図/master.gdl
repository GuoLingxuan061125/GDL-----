x=1
y=2
z=3
code=1
eps=1e-5

gosub "給湯器パイプ設定"
gosub "給湯器パイプ座標計算"
gosub "給湯器パイプ(エルボ付き)座標計算"
gosub "給湯器分岐パイプ設定"
gosub "給湯器分岐パイプ座標計算"

goto "master_end"
end


"給湯器パイプ設定":
    !values{2} "h_pipeDisSpot" 1,"パイプ頂点設定",2,"分岐パイプ設定",3,"パイプ位置調整",0,"表示しない"
    values{2} "h_pipeDisSpot" 1,"パイプ頂点設定",2,"分岐パイプ設定",0,"表示しない"
    values{2} "heaterDir" 1,"上",2,"下",3,"左",4,"右"
    values "h_pipeNum" range[1,]
    values "h_pipeLevel" range[0,heaterSize3]
    values "elbowRad" range(0,)
    elbowRad=max(elbowRad,h_pipeDia*1.5)

    if h_pipeDisSpot<>2 then
        hideparameter "h_pipeBrDisOffset"
    endif

    dim _h_pipeLevel[],_h_pipePen[],_h_pipeMat[]
    _h_pipeLevel[1]=0
    _h_pipePen[1]=0
    _h_pipeMat[1]=0

    for i=1 to h_pipeNum
        _h_pipeLevel[i]=h_pipeLevel[i]
        _h_pipePen[i]=h_pipePen[i]
        _h_pipeMat[i]=h_pipeMat[i]
    next i

    h_pipeLevel=_h_pipeLevel
    h_pipePen=_h_pipePen
    h_pipeMat=_h_pipeMat

    parameters \
    h_pipeLevel=h_pipeLevel,
    h_pipePen=h_pipePen,
    h_pipeMat=h_pipeMat

    for i=1 to h_pipeNum
        for j=1 to h_pipeNum
            if j>i and abs(h_pipeLevel[j]-h_pipeLevel[i])<0.0002-eps then
                h_pipeLevel[j]=h_pipeLevel[i]+0.0002
            endif
        next j
    next i

    !パイプ相対座標
        values "h_pipeVNum" range[1,]

        dim _h_pipeVPos[][]
        _h_pipeVPos[1][1]=0 : _h_pipeVPos[1][2]=0

        for i=1 to h_pipeNum
            for j=1 to h_pipeVNum
                _h_pipeVPos[i][2*(j-1)+x]=h_pipeVPos[i][2*(j-1)+x]
                _h_pipeVPos[i][2*(j-1)+y]=h_pipeVPos[i][2*(j-1)+y]
            next j
        next i

        h_pipeVPos=_h_pipeVPos

        parameters h_pipeVPos=h_pipeVPos
return


"給湯器パイプ座標計算":
    !始点
        dim _h_pipeStart[][]
        _h_pipeStart[1][1]=0 : _h_pipeStart[1][2]=0

        for i=1 to h_pipeNum
            if heaterDir=1 then !上
                _h_pipeStart[i][x]=heaterSize1/(2*h_pipeNum)+(i-1)*heaterSize1/h_pipeNum
                _h_pipeStart[i][y]=heaterSize2
            endif

            if heaterDir=2 then !下
                _h_pipeStart[i][x]=heaterSize1/(2*h_pipeNum)+(i-1)*heaterSize1/h_pipeNum
                _h_pipeStart[i][y]=0
            endif

            if heaterDir=3 then !左
                _h_pipeStart[i][x]=0
                _h_pipeStart[i][y]=heaterSize2/(2*h_pipeNum)+(i-1)*heaterSize2/h_pipeNum
            endif

            if heaterDir=4 then !右
                _h_pipeStart[i][x]=heaterSize1
                _h_pipeStart[i][y]=heaterSize2/(2*h_pipeNum)+(i-1)*heaterSize2/h_pipeNum
            endif
        next i

    !座標リスト
        dim _h_pipePos[][]
        _h_pipePos[1][1]=0 : _h_pipePos[1][2]=0

        for i=1 to h_pipeNum
            _h_pipePos[i][2*(1-1)+x]=_h_pipeStart[i][x]
            _h_pipePos[i][2*(1-1)+y]=_h_pipeStart[i][y]

            for j=2 to h_pipeVNum+1
                _h_pipePos[i][2*(j-1)+x]=_h_pipePos[i][2*(j-2)+x]+_h_pipeVPos[i][2*(j-2)+x]
                _h_pipePos[i][2*(j-1)+y]=_h_pipePos[i][2*(j-2)+y]+_h_pipeVPos[i][2*(j-2)+y]
            next j
        next i

    !重なる頂点を除く座標リスト
        dim _h_pipeTNum[],_h_pipeTPos[][]
        _h_pipeTNum[1]=0
        _h_pipeTPos[1][1]=0 : _h_pipeTPos[1][2]=0

        for i=1 to h_pipeNum
            vCount=0

            for j=1 to h_pipeVNum+1
                if j=1 then
                    vCount=vCount+1
                    _h_pipeTPos[i][2*(vCount-1)+x]=_h_pipePos[i][2*(j-1)+x]
                    _h_pipeTPos[i][2*(vCount-1)+y]=_h_pipePos[i][2*(j-1)+y]
                else
                    x0=_h_pipePos[i][2*(j-2)+x]
                    y0=_h_pipePos[i][2*(j-2)+y]
                    x1=_h_pipePos[i][2*(j-1)+x]
                    y1=_h_pipePos[i][2*(j-1)+y]

                    if abs(x1-x0)+abs(y1-y0)>eps then
                        vCount=vCount+1
                        _h_pipeTPos[i][2*(vCount-1)+x]=x1
                        _h_pipeTPos[i][2*(vCount-1)+y]=y1
                    endif
                endif
            next j

            _h_pipeTNum[i]=vCount
        next i

        h_pipeTNum=_h_pipeTNum
        h_pipeTPos=_h_pipeTPos

        parameters \
        h_pipeTNum=h_pipeTNum,
        h_pipeTPos=h_pipeTPos
return


"給湯器パイプ(エルボ付き)座標計算":
    !夾角計算
        dim _elbowAngle[][],_elbowRadius[][]
        _elbowAngle[1][1]=0 : _elbowAngle[1][2]=0
        _elbowRadius[1][1]=0 : _elbowRadius[1][2]=0

        for i=1 to h_pipeNum
            _elbowAngle[i][1]=0
            _elbowRadius[i][1]=0

            if _h_pipeTNum[i]>=3 then
                for j=1 to _h_pipeTNum[i]-1
                    x1=_h_pipeTPos[i][2*j+x]
                    y1=_h_pipeTPos[i][2*j+y]
                    x2=_h_pipeTPos[i][2*(j-1)+x]
                    y2=_h_pipeTPos[i][2*(j-1)+y]
                    x3=_h_pipeTPos[i][2*(j+1)+x]
                    y3=_h_pipeTPos[i][2*(j+1)+y]
                    len1to2=sqr((x2-x1)^2+(y2-y1)^2)
                    len1to3=sqr((x3-x1)^2+(y3-y1)^2)

                    _elbowAngle[i][j]=acs(((x2-x1)*(x3-x1)+(y2-y1)*(y3-y1))/(len1to2*len1to3))
                    _elbowRadius[i][j]=min(elbowRad/tan(_elbowAngle[i][j]/2),len1to2/2,len1to3/2)
                next j
            endif
        next i

    !パイプ(エルボ付き)座標計算
        dim _h_pipeElbowVNum[],_h_pipeElbowPos[][],_h_pipeElbowFlag[][]
        _h_pipeElbowVNum[1]=0
        _h_pipeElbowPos[1][1]=0 : _h_pipeElbowPos[1][2]=0
        _h_pipeElbowFlag[1][1]=0 : _h_pipeElbowFlag[1][2]=0

        for i=1 to h_pipeNum
            vCount=0

            for j=1 to _h_pipeTNum[i]
                if j=1 then
                    vCount=vCount+1
                    _h_pipeElbowPos[i][2*(vCount-1)+x]=_h_pipeTPos[i][2*(j-1)+x]
                    _h_pipeElbowPos[i][2*(vCount-1)+y]=_h_pipeTPos[i][2*(j-1)+y]
                    _h_pipeElbowFlag[i][vCount]=1
                endif

                if j>1 and j<_h_pipeTNum[i] then
                    x1=_h_pipeTPos[i][2*(j-1)+x]
                    y1=_h_pipeTPos[i][2*(j-1)+y]
                    x2=_h_pipeTPos[i][2*(j-2)+x]
                    y2=_h_pipeTPos[i][2*(j-2)+y]
                    x3=_h_pipeTPos[i][2*j+x]
                    y3=_h_pipeTPos[i][2*j+y]

                    len1to2=max(sqr((x2-x1)^2+(y2-y1)^2),eps)
                    len1to3=max(sqr((x3-x1)^2+(y3-y1)^2),eps)
                
                    tempx1=x1+(x2-x1)*_elbowRadius[i][j-1]/len1to2
                    tempY1=y1+(y2-y1)*_elbowRadius[i][j-1]/len1to2

                    tempx2=x1+(x3-x1)*_elbowRadius[i][j-1]/len1to3
                    tempY2=y1+(y3-y1)*_elbowRadius[i][j-1]/len1to3

                    vCount=vCount+1
                    _h_pipeElbowPos[i][2*(vCount-1)+x]=tempx1
                    _h_pipeElbowPos[i][2*(vCount-1)+y]=tempY1
                    _h_pipeElbowFlag[i][vCount]=1

                    vCount=vCount+1
                    _h_pipeElbowPos[i][2*(vCount-1)+x]=tempx2
                    _h_pipeElbowPos[i][2*(vCount-1)+y]=tempY2
                    _h_pipeElbowFlag[i][vCount]=1001
                endif

                if j=_h_pipeTNum[i] then
                    vCount=vCount+1
                    _h_pipeElbowPos[i][2*(vCount-1)+x]=_h_pipeTPos[i][2*(j-1)+x]
                    _h_pipeElbowPos[i][2*(vCount-1)+y]=_h_pipeTPos[i][2*(j-1)+y]
                    _h_pipeElbowFlag[i][vCount]=0
                endif
            next j

            _h_pipeElbowVNum[i]=vCount
        next i
return


"給湯器分岐パイプ設定":
    values "h_pipeBrVNum" range[1,]

    !分岐パイプ本数リスト
        values "h_pipeBrNumList" range[0,]

        dim _h_pipeBrNumList[][]
        _h_pipeBrNumList[1][1]=0 : _h_pipeBrNumList[1][2]=0

        for i=1 to h_pipeNum
            _h_pipeBrNumList[i][1]=0
            _h_pipeBrNumList[i][2]=0

            for j=1 to _h_pipeTNum[i]-1
                _h_pipeBrNumList[i][j]=h_pipeBrNumList[i][j]
            next j
        next i

        h_pipeBrNumList=_h_pipeBrNumList

        parameters h_pipeBrNumList=h_pipeBrNumList

    !分岐パイプ本数
        dim _h_pipeBrNum[],_h_pipeBrStart[][],_h_pipeBrOffset[][],_h_pipeBrRtz[][]
        _h_pipeBrNum[1]=0
        _h_pipeBrStart[1][1]=0  : _h_pipeBrStart[1][2]=0 
        _h_pipeBrOffset[1][1]=0 : _h_pipeBrOffset[1][2]=0
        _h_pipeBrRtz[1][1]=0    : _h_pipeBrRtz[1][2]=0   

        for i=1 to h_pipeNum
            _h_pipeBrNum[i]=0
            _h_pipeBrStart[i][1]=0  : _h_pipeBrStart[i][2]=0
            _h_pipeBrOffset[i][1]=0 : _h_pipeBrOffset[i][2]=0
            _h_pipeBrRtz[i][1]=0    : _h_pipeBrRtz[i][2]=0   

            for j=1 to _h_pipeTNum[i]-1
                x1=_h_pipeTPos[i][2*(j-1)+x]
                x2=_h_pipeTPos[i][2*j+x]
                y1=_h_pipeTPos[i][2*(j-1)+y]
                y2=_h_pipeTPos[i][2*j+y]
                len=max(sqr((x2-x1)^2+(y2-y1)^2),eps)

                for n=1 to _h_pipeBrNumList[i][j]
                    _h_pipeBrNum[i]=_h_pipeBrNum[i]+1

                    !始点辺の回転角
                        _h_pipeBrRtz[i][_h_pipeBrNum[i]]=0

                        if y2>y1+eps then
                            _h_pipeBrRtz[i][_h_pipeBrNum[i]]=acs((x2-x1)/len)
                        endif

                        if y2<=y1+eps and y2>=y1-eps then
                            if x2>=x1 then
                                _h_pipeBrRtz[i][_h_pipeBrNum[i]]=0
                            else
                                _h_pipeBrRtz[i][_h_pipeBrNum[i]]=180
                            endif
                        endif

                        if y2<y1-eps then
                            _h_pipeBrRtz[i][_h_pipeBrNum[i]]=360-acs((x2-x1)/len)
                        endif

                    !分岐パイプ始点座標
                        _h_pipeBrStart[i][2*(_h_pipeBrNum[i]-1)+x]=x1+(x2-x1)*n/(_h_pipeBrNumList[i][j]+1)
                        _h_pipeBrStart[i][2*(_h_pipeBrNum[i]-1)+y]=y1+(y2-y1)*n/(_h_pipeBrNumList[i][j]+1)
                        _h_pipeBrOffset[i][_h_pipeBrNum[i]]=h_pipeBrOffset[i][_h_pipeBrNum[i]]
                next n
            next j
        next i

        h_pipeBrNum=_h_pipeBrNum
        h_pipeBrOffset=_h_pipeBrOffset

        parameters \
        h_pipeBrNum=h_pipeBrNum,
        h_pipeBrOffset=h_pipeBrOffset

    !分岐パイプ座標
        dim _h_pipeBrVPos[][]
        _h_pipeBrVPos[1][1]=0 : _h_pipeBrVPos[1][2]=0

        for i=1 to h_pipeNum
            _h_pipeBrVPos[i][1]=0 : _h_pipeBrVPos[i][2]=0

            for j=1 to _h_pipeBrNum[i]
                for n=1 to h_pipeBrVNum
                    index=h_pipeBrVNum*2*(j-1)+2*(n-1)

                    _h_pipeBrVPos[i][index+x]=h_pipeBrVPos[i][index+x]
                    _h_pipeBrVPos[i][index+y]=h_pipeBrVPos[i][index+y]
                next n
            next j
        next i

        h_pipeBrVPos=_h_pipeBrVPos

        parameters h_pipeBrVPos=h_pipeBrVPos
return


"給湯器分岐パイプ座標計算":
    !座標リスト
        dim _h_pipeBrPos[][]
        _h_pipeBrPos[1][1]=0 : _h_pipeBrPos[1][2]=0

        for i=1 to h_pipeNum
            _h_pipeBrPos[i][1]=0 : _h_pipeBrPos[i][2]=0

            for j=1 to _h_pipeBrNum[i]
                index1=(h_pipeBrVNum+1)*2*(j-1)
                index2=h_pipeBrVNum*2*(j-1)

                _h_pipeBrPos[i][index1+x]=_h_pipeBrStart[i][2*(j-1)+x]+_h_pipeBrOffset[i][j]*cos(_h_pipeBrRtz[i][j])
                _h_pipeBrPos[i][index1+y]=_h_pipeBrStart[i][2*(j-1)+y]+_h_pipeBrOffset[i][j]*sin(_h_pipeBrRtz[i][j])

                for n=2 to h_pipeBrVNum+1
                    _h_pipeBrPos[i][index1+2*(n-1)+x]=_h_pipeBrPos[i][index1+2*(n-2)+x]+_h_pipeBrVPos[i][index2+2*(n-2)+x]
                    _h_pipeBrPos[i][index1+2*(n-1)+y]=_h_pipeBrPos[i][index1+2*(n-2)+y]+_h_pipeBrVPos[i][index2+2*(n-2)+y]
                next n
            next j
        next i

    !重なる頂点を除く座標リスト
        dim _h_pipeBrTNum[][],_h_pipeBrTPos[][]
        _h_pipeBrTNum[1][1]=0 : _h_pipeBrTNum[1][2]=0
        _h_pipeBrTPos[1][1]=0 : _h_pipeBrTPos[1][2]=0

        for i=1 to h_pipeNum
            _h_pipeBrTNum[i][1]=0 : _h_pipeBrTNum[i][2]=0
            _h_pipeBrTPos[i][1]=0 : _h_pipeBrTPos[i][2]=0

            for j=1 to h_pipeBrNum[i]
                index=(h_pipeBrVNum+1)*2*(j-1)
                vCount=0

                for n=1 to h_pipeBrVNum+1
                    if n=1 then 
                        vCount=vCount+1
                        _h_pipeBrTPos[i][index+x]=_h_pipeBrPos[i][index+x]
                        _h_pipeBrTPos[i][index+y]=_h_pipeBrPos[i][index+y]
                    else
                        x0=_h_pipeBrPos[i][index+2*(n-2)+x]
                        y0=_h_pipeBrPos[i][index+2*(n-2)+y]
                        x1=_h_pipeBrPos[i][index+2*(n-1)+x]
                        y1=_h_pipeBrPos[i][index+2*(n-1)+y]

                        if abs(x1-x0)+abs(y1-y0)>eps then
                            vCount=vCount+1
                            _h_pipeBrTPos[i][index+2*(vCount-1)+x]=x1
                            _h_pipeBrTPos[i][index+2*(vCount-1)+y]=y1
                        endif
                    endif
                next n

                if vCount<h_pipeBrVNum+1 then
                    for n=vCount+1 to h_pipeBrVNum+1
                        _h_pipeBrTPos[i][index+2*(n-1)+x]=0
                        _h_pipeBrTPos[i][index+2*(n-1)+y]=0
                    next n
                endif

                _h_pipeBrTNum[i][j]=vCount
            next j
        next i

        h_pipeBrTNum=_h_pipeBrTNum
        h_pipeBrTPos=_h_pipeBrTPos

        parameters \
        h_pipeBrTNum=h_pipeBrTNum,
        h_pipeBrTPos=h_pipeBrTPos
return


"master_end":