hotspot 0,0,0
hotspot 0,stairWid,0


!====================================================================================階段
group "stair_part1"
    !材質
    top_material=stairMat
    bottom_material=stairMat
    mat1=stairMat
    if switchFin then
        if stepFinType=1 then
            mat2=treadFinMat
            mat3=riserFinMat
        else
            mat2=mortarMat
            mat3=mortarMat
        endif
    else
        mat2=stairMat
        mat3=stairMat
    endif

    !躯体
    for i=1 to stairNum
        ruledsegmented{2} top_material,bottom_material,3,1+2+4+8+16+32,0,
        0           ,stairStart,0                  ,0,mat1,
        stairTread  ,stairStart,stairRiser         ,0,mat2,
        -stairNosing,stairStart,stairRiser-stairRat,0,mat3,
        0           ,stairEnd  ,0                  ,
        stairTread  ,stairEnd  ,stairRiser         ,
        -stairNosing,stairEnd  ,stairRiser-stairRat
    add stairTread,0,stairRiser
    next i
    del stairNum
endgroup


group "stair_part2"
    !材質
    top_material=stairMat
    bottom_material=stairMat
    mat1=stairMat
    mat2=stairMat
    mat4=stairMat
    if switchFin then
        mat3=bottomFinMat
    else
        mat3=stairMat
    endif

    !躯体
    if switchLanding then
        ruledsegmented{2} top_material,bottom_material,4,1+2+4+8+16+32,0,
        0                                           ,stairStart,0                             ,0,mat1,
        stairNum*stairTread                         ,stairStart,stairNum*stairRiser           ,0,mat2,
        (stairNum*stairRiser-landingThi-equB1)/equK1,stairStart,stairNum*stairRiser-landingThi,0,mat3,
        -equB1/equK1                                ,stairStart,0                             ,0,mat4,
        0                                           ,stairEnd  ,0                             ,
        stairNum*stairTread                         ,stairEnd  ,stairNum*stairRiser           ,
        (stairNum*stairRiser-landingThi-equB1)/equK1,stairEnd  ,stairNum*stairRiser-landingThi,
        -equB1/equK1                                ,stairEnd  ,0
    else
        ruledsegmented{2} top_material,bottom_material,4,1+2+4+8+16+32,0,
        0                  ,stairStart,0                                ,0,mat1,
        stairNum*stairTread,stairStart,stairNum*stairRiser              ,0,mat2,
        stairNum*stairTread,stairStart,equK1*(stairNum*stairTread)+equB1,0,mat3,
        -equB1/equK1       ,stairStart,0                                ,0,mat1,
        0                  ,stairEnd  ,0                                ,
        stairNum*stairTread,stairEnd  ,stairNum*stairRiser              ,
        stairNum*stairTread,stairEnd  ,equK1*(stairNum*stairTread)+equB1,
        -equB1/equK1       ,stairEnd  ,0
    endif
endgroup


!====================================================================================踊り場
group "landing"
    !材質
    top_material=stairMat
    bottom_material=stairMat
    mat2=stairMat
    mat4=stairMat
    if switchFin then
        mat1=landingTopFinMat
        mat3=bottomFinMat
    else
        mat1=stairMat
        mat3=stairMat
    endif

    !躯体
    if switchLanding then
        ruledsegmented{2} top_material,bottom_material,4,1+2+4+8+16+32,0,
        stairNum*stairTread                         ,stairStart,stairNum*stairRiser                          ,0,mat1,
        stairNum*stairTread+landingDep              ,stairStart,stairNum*stairRiser-landingDep*landingRat/100,0,mat2,
        stairNum*stairTread+landingDep              ,stairStart,stairNum*stairRiser-landingThi               ,0,mat3,
        (stairNum*stairRiser-landingThi-equB1)/equK1,stairStart,stairNum*stairRiser-landingThi               ,0,mat4,
        stairNum*stairTread                         ,stairEnd  ,stairNum*stairRiser                          ,
        stairNum*stairTread+landingDep              ,stairEnd  ,stairNum*stairRiser-landingDep*landingRat/100,
        stairNum*stairTread+landingDep              ,stairEnd  ,stairNum*stairRiser-landingThi               ,
        (stairNum*stairRiser-landingThi-equB1)/equK1,stairEnd  ,stairNum*stairRiser-landingThi               
    endif
endgroup

stair_body1 = addgroup ("stair_part1","stair_part2")
stair_body2 = addgroup (stair_body1,"landing")
placegroup stair_body2


!====================================================================================ノンスリップ
group "nonslip"
    !材質
    material nonslipFinMat

    !ノンスリップ
    if switchFin and stepFinType=1 then
        for i=1 to stairNum
            add -stairNosing,stairStart,stairRiser-stairRat
            roty -atn(stairRat/(stairTread+stairNosing))
                block nonslipWid,stairEnd-stairStart,0.005
            del 2
        add stairTread,0,stairRiser
        next i
        del stairNum
    endif
endgroup

placegroup "nonslip"


!====================================================================================立上り
!外部立上り
group "handrail1"
    !材質
    mat1=stairMat
    mat2=stairMat
    mat5=stairMat
    if switchFin then
        top_material=handrailOutFinMat
        bottom_material=handrailInFinMat
        mat3=bottomFinMat
        mat4=bottomFinMat
        mat6=handrailTopFinMat
        mat7=handrailTopFinMat
    else
        top_material=stairMat
        bottom_material=stairMat
        mat3=stairMat
        mat4=stairMat
        mat6=stairMat
        mat7=stairMat
    endif

    !躯体
    if switchRail1 then
        if switchLanding then
            ruledsegmented{2} top_material,bottom_material,7,1+2+4+8+16+32,0,
            -stairTread                                     ,0       ,stairRailHei                      ,0,mat1,
            -stairTread                                     ,0       ,0                                 ,0,mat2,
            -equB1/equK1                                    ,0       ,0                                 ,0,mat3,
            (stairNum*stairRiser-landingThi-equB1)/equK1    ,0       ,stairNum*stairRiser-landingThi    ,0,mat4,
            stairNum*stairTread+landingDep                  ,0       ,stairNum*stairRiser-landingThi    ,0,mat5,
            stairNum*stairTread+landingDep                  ,0       ,stairNum*stairRiser+landingRailHei,0,mat6,
            (stairNum*stairRiser+landingRailHei-equB2)/equK2,0       ,stairNum*stairRiser+landingRailHei,0,mat7,
            -stairTread                                     ,rail1Wid,stairRailHei                      ,
            -stairTread                                     ,rail1Wid,0                                 ,
            -equB1/equK1                                    ,rail1Wid,0                                 ,
            (stairNum*stairRiser-landingThi-equB1)/equK1    ,rail1Wid,stairNum*stairRiser-landingThi    ,
            stairNum*stairTread+landingDep                  ,rail1Wid,stairNum*stairRiser-landingThi    ,
            stairNum*stairTread+landingDep                  ,rail1Wid,stairNum*stairRiser+landingRailHei,
            (stairNum*stairRiser+landingRailHei-equB2)/equK2,rail1Wid,stairNum*stairRiser+landingRailHei
        else
            ruledsegmented{2} top_material,bottom_material,6,1+2+4+8+16+32,0,
            -stairTread                                   ,0       ,stairRailHei                     ,0,mat1,
            -stairTread                                   ,0       ,0                                ,0,mat2,
            -equB1/equK1                                  ,0       ,0                                ,0,mat3,
            stairNum*stairTread                           ,0       ,equK1*(stairNum*stairTread)+equB1,0,mat5,
            stairNum*stairTread                           ,0       ,stairNum*stairRiser+stairRailHei ,0,mat6,
            (stairNum*stairRiser+stairRailHei-equB2)/equK2,0       ,stairNum*stairRiser+stairRailHei ,0,mat7,
            -stairTread                                   ,rail1Wid,stairRailHei                     ,
            -stairTread                                   ,rail1Wid,0                                ,
            -equB1/equK1                                  ,rail1Wid,0                                ,
            stairNum*stairTread                           ,rail1Wid,equK1*(stairNum*stairTread)+equB1,
            stairNum*stairTread                           ,rail1Wid,stairNum*stairRiser+stairRailHei ,
            (stairNum*stairRiser+stairRailHei-equB2)/equK2,rail1Wid,stairNum*stairRiser+stairRailHei 
        endif
    endif
endgroup

if switchRail1 then
    placegroup "handrail1"
endif


!内部立上り
group "handrail2"
    !材質
    mat1=stairMat
    mat2=stairMat
    mat5=stairMat
    if switchFin then
        top_material=handrailOutFinMat
        bottom_material=handrailInFinMat
        mat3=bottomFinMat
        mat4=bottomFinMat
        mat6=handrailTopFinMat
        mat7=handrailTopFinMat
    else
        top_material=stairMat
        bottom_material=stairMat
        mat3=stairMat
        mat4=stairMat
        mat6=stairMat
        mat7=stairMat
    endif

    !躯体
    if switchRail2 then
        if switchLanding then
            ruledsegmented{2} top_material,bottom_material,7,1+2+4+8+16+32,0,
            -stairTread                                     ,stairWid         ,stairRailHei                      ,0,mat1,
            -stairTread                                     ,stairWid         ,0                                 ,0,mat2,
            -equB1/equK1                                    ,stairWid         ,0                                 ,0,mat3,
            (stairNum*stairRiser-landingThi-equB1)/equK1    ,stairWid         ,stairNum*stairRiser-landingThi    ,0,mat4,
            stairNum*stairTread+landingDep                  ,stairWid         ,stairNum*stairRiser-landingThi    ,0,mat5,
            stairNum*stairTread+landingDep                  ,stairWid         ,stairNum*stairRiser+landingRailHei,0,mat6,
            (stairNum*stairRiser+landingRailHei-equB2)/equK2,stairWid         ,stairNum*stairRiser+landingRailHei,0,mat7,
            -stairTread                                     ,stairWid-rail2Wid,stairRailHei                      ,
            -stairTread                                     ,stairWid-rail2Wid,0                                 ,
            -equB1/equK1                                    ,stairWid-rail2Wid,0                                 ,
            (stairNum*stairRiser-landingThi-equB1)/equK1    ,stairWid-rail2Wid,stairNum*stairRiser-landingThi    ,
            stairNum*stairTread+landingDep                  ,stairWid-rail2Wid,stairNum*stairRiser-landingThi    ,
            stairNum*stairTread+landingDep                  ,stairWid-rail2Wid,stairNum*stairRiser+landingRailHei,
            (stairNum*stairRiser+landingRailHei-equB2)/equK2,stairWid-rail2Wid,stairNum*stairRiser+landingRailHei
        else
            ruledsegmented{2} top_material,bottom_material,6,1+2+4+8+16+32,0,
            -stairTread                                   ,stairWid         ,stairRailHei                     ,0,mat1,
            -stairTread                                   ,stairWid         ,0                                ,0,mat2,
            -equB1/equK1                                  ,stairWid         ,0                                ,0,mat3,
            stairNum*stairTread                           ,stairWid         ,equK1*(stairNum*stairTread)+equB1,0,mat5,
            stairNum*stairTread                           ,stairWid         ,stairNum*stairRiser+stairRailHei ,0,mat6,
            (stairNum*stairRiser+stairRailHei-equB2)/equK2,stairWid         ,stairNum*stairRiser+stairRailHei ,0,mat7,
            -stairTread                                   ,stairWid-rail2Wid,stairRailHei                     ,
            -stairTread                                   ,stairWid-rail2Wid,0                                ,
            -equB1/equK1                                  ,stairWid-rail2Wid,0                                ,
            stairNum*stairTread                           ,stairWid-rail2Wid,equK1*(stairNum*stairTread)+equB1,
            stairNum*stairTread                           ,stairWid-rail2Wid,stairNum*stairRiser+stairRailHei ,
            (stairNum*stairRiser+stairRailHei-equB2)/equK2,stairWid-rail2Wid,stairNum*stairRiser+stairRailHei 
        endif
    endif
endgroup

if switchRail2 then
    placegroup "handrail2"
endif



