code=1
eps=1e-5


!=========================================================ゾーン
!頂点座標リスト
values "zone_num" range[3,]

dim _zone_pos[][]

for i=1 to zone_num
    _zone_pos[i][1]=zone_pos[i][1]
    _zone_pos[i][2]=zone_pos[i][2]
next i

parameters zone_pos=_zone_pos


!極値
for i=1 to zone_num
    put _zone_pos[i][1]
next i

minx=min(use(nsp))
maxx=max(get(nsp))

for i=1 to zone_num
    put _zone_pos[i][2]
next i

miny=min(use(nsp))
maxy=max(get(nsp))


!辺長さ・回転角・方程式
dim _zone_a[]
dim _zone_b[]
dim _zone_c[]
dim _zone_len[]
dim _zone_rtz[]

for i=1 to zone_num
    if i<zone_num then
        i2=i+1
    else
        i2=1
    endif

    _zone_a[i]=_zone_pos[i2][2]-_zone_pos[i][2]
    _zone_b[i]=_zone_pos[i][1]-_zone_pos[i2][1]
    _zone_c[i]=_zone_pos[i2][1]*_zone_pos[i][2]-_zone_pos[i][1]*_zone_pos[i2][2]

    !長さ
    _zone_len[i]=sqr((_zone_pos[i2][1]-_zone_pos[i][1])^2+(_zone_pos[i2][2]-_zone_pos[i][2])^2)

    !回転角
    if _zone_pos[i2][2]>_zone_pos[i][2]+eps then
        _zone_rtz[i]=acs((_zone_pos[i2][1]-_zone_pos[i][1])/(_zone_len[i]+eps))
    endif

    if _zone_pos[i2][2]<=_zone_pos[i][2]+eps and _zone_pos[i2][2]>=_zone_pos[i][2]-eps then
        if _zone_pos[i2][1]>=_zone_pos[i][1] then
            _zone_rtz[i]=0
        else
            _zone_rtz[i]=180
        endif
    endif

    if _zone_pos[i2][2]<_zone_pos[i][2]-eps then
        _zone_rtz[i]=360-acs((_zone_pos[i2][1]-_zone_pos[i][1])/(_zone_len[i]+eps))
    endif
next i


!=========================================================LGS
!LGS座標リスト
dim _lgs_start_pos[][]
dim _lgs_end_pos[][]
_lgs_start_pos[1][1]=0
_lgs_start_pos[1][2]=0
_lgs_end_pos[1][1]=0
_lgs_end_pos[1][2]=0

dim _lgs_len[]
dim _lgs_rtz[]
_lgs_len[1]=0
_lgs_rtz[1]=0

for i=1 to lgs_num
    !座標リスト
    for j=1 to 2
        _lgs_start_pos[i][j]=lgs_start_pos[i][j]
        _lgs_end_pos[i][j]=lgs_end_pos[i][j]
    next j

    !長さ
    _lgs_len[i]=sqr((_lgs_end_pos[i][1]-_lgs_start_pos[i][1])^2+(_lgs_end_pos[i][2]-_lgs_start_pos[i][2])^2)

    !回転角
    if _lgs_end_pos[i][2]>_lgs_start_pos[i][2]+eps then
        _lgs_rtz[i]=acs((_lgs_end_pos[i][1]-_lgs_start_pos[i][1])/(_lgs_len[i]+eps))
    endif

    if _lgs_end_pos[i][2]<=_lgs_start_pos[i][2]+eps and _lgs_end_pos[i][2]>=_lgs_start_pos[i][2]-eps then
        if _lgs_end_pos[i][1]>=_lgs_start_pos[i][1] then
            _lgs_rtz[i]=0
        else
            _lgs_rtz[i]=180
        endif
    endif

    if _lgs_end_pos[i][2]<_lgs_start_pos[i][2]-eps then
        _lgs_rtz[i]=360-acs((_lgs_end_pos[i][1]-_lgs_start_pos[i][1])/(_lgs_len[i]+eps))
    endif
next i

parameters lgs_start_pos=_lgs_start_pos
parameters lgs_end_pos=_lgs_end_pos

!LGS中心
dim _arrow_x[]
dim _arrow_y[]
dim _arrow_offset[]
_arrow_x[1]=0
_arrow_y[1]=0
_arrow_offset[1]=0

for i=1 to lgs_num
    _arrow_offset[i]=arrow_offset[i]
    if _arrow_offset[i]<-_lgs_len[i]/2 then _arrow_offset[i]=-_lgs_len[i]/2
    if _arrow_offset[i]>_lgs_len[i]/2 then _arrow_offset[i]=_lgs_len[i]/2

    _arrow_x[i]=(_lgs_start_pos[i][1]+_lgs_end_pos[i][1])/2+_arrow_offset[i]*cos(_lgs_rtz[i])
    _arrow_y[i]=(_lgs_start_pos[i][2]+_lgs_end_pos[i][2])/2-_arrow_offset[i]*sin(_lgs_rtz[i])
next i

parameters arrow_offset=_arrow_offset


!厚み整数化リスト
dim _thi_code[]
_thi_code[60]=1
_thi_code[90]=2
_thi_code[95]=3
_thi_code[125]=4
_thi_code[150]=5
_thi_code[210]=6

!厚み実際値リスト
dim _thi_value[]
_thi_value[1]=0.006
_thi_value[2]=0.009
_thi_value[3]=0.0095
_thi_value[4]=0.0125
_thi_value[5]=0.015
_thi_value[6]=0.021

!ボード種類文字化リスト
dim _type_moji[]
_type_moji[1]="GB-R"
_type_moji[2]="K"
_type_moji[3]="GB-R-H"
_type_moji[4]="GB-S"
_type_moji[5]="GB-F"
_type_moji[6]="GB-St-A・B"
_type_moji[7]="GB-L"
_type_moji[8]="GB-D"
_type_moji[9]="GB-NC"
_type_moji[10]="GB-Hc"

!厚み文字化リスト
dim _thi_moji[]
_thi_moji[1]="6mm"
_thi_moji[2]="9mm"
_thi_moji[3]="9.5mm"
_thi_moji[4]="12.5mm"
_thi_moji[5]="15mm"
_thi_moji[6]="21mm"

!サイズ文字化リスト
dim _size_moji[]
_size_moji[1]="3x6版"
_size_moji[2]="3x8版"
_size_moji[3]="3x9版"
_size_moji[4]="メートル版"
_size_moji[5]="2x6版"