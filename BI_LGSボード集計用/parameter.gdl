!==========================================================LGS情報
values "lgs_num" range[0,]


!ボード反転リスト
dim _board_reverse_list[]
_board_reverse_list[1]=0

for i=1 to lgs_num
    _board_reverse_list[i]=board_reverse_list[i]
next i

parameters board_reverse_list=_board_reverse_list


!ボード有効側リスト
dim _board_effect_list[][]
dim _front_pos[][]
dim _back_pos[][]
_board_effect_list[1][1]=0
_board_effect_list[1][2]=0
_front_pos[1][1]=0
_front_pos[1][2]=0
_back_pos[1][1]=0
_back_pos[1][2]=0

effect_d=0.1

for i=1 to lgs_num
    !表側有効性
    _front_pos[i][1]=_arrow_x[i]+effect_d*sin(_lgs_rtz[i])*(1-2*_board_reverse_list[i])
    _front_pos[i][2]=_arrow_y[i]-effect_d*cos(_lgs_rtz[i])*(1-2*_board_reverse_list[i])

    intersection_num=0
    intersection_pos=0

    for j=1 to zone_num
        if j<zone_num then
            j2=j+1
        else
            j2=1
        endif

        if _zone_b[j]<>0 then
            if _front_pos[i][1]>=min(_zone_pos[j][1],_zone_pos[j2][1]) and _front_pos[i][1]<max(_zone_pos[j][1],_zone_pos[j2][1]) then
                intersection_pos=-(_zone_a[j]*_front_pos[i][1]+_zone_c[j])/_zone_b[j]

                if intersection_pos>=_front_pos[i][2]-eps then
                    intersection_num=intersection_num+1
                endif
            endif
        endif
    next j

    if fra(intersection_num/2)<>0 then
        _board_effect_list[i][1]=1
    else
        _board_effect_list[i][1]=0
    endif

    !裏側有効性
    _back_pos[i][1]=_arrow_x[i]-effect_d*sin(_lgs_rtz[i])*(1-2*_board_reverse_list[i])
    _back_pos[i][2]=_arrow_y[i]+effect_d*cos(_lgs_rtz[i])*(1-2*_board_reverse_list[i])

    intersection_num=0
    intersection_pos=0

    for j=1 to zone_num
        if j<zone_num then
            j2=j+1
        else
            j2=1
        endif

        if _zone_b[j]<>0 then
            if _back_pos[i][1]>=min(_zone_pos[j][1],_zone_pos[j2][1]) and _back_pos[i][1]<max(_zone_pos[j][1],_zone_pos[j2][1]) then
                intersection_pos=-(_zone_a[j]*_back_pos[i][1]+_zone_c[j])/_zone_b[j]

                if intersection_pos>=_back_pos[i][2]-eps then
                    intersection_num=intersection_num+1
                endif
            endif
        endif
    next j

    if fra(intersection_num/2)<>0 then
        _board_effect_list[i][2]=1
    else
        _board_effect_list[i][2]=0
    endif
next i

parameters board_effect_list=_board_effect_list


!ボード有無リスト
dim _switch_board_list[]
dim _switch_board2_list[]
_switch_board_list[1]=0
_switch_board2_list[1]=0

for i=1 to lgs_num
    _switch_board_list[i]=switch_board_list[i]
    _switch_board2_list[i]=switch_board2_list[i]
next i

parameters switch_board_list=_switch_board_list
parameters switch_board2_list=_switch_board2_list


!ボード有無リスト
dim _num_board_list[]
dim _num_board2_list[]
_num_board_list[1]=0
_num_board2_list[1]=0

for i=1 to lgs_num
    if _switch_board_list[i]=0 then
        _num_board_list[i]=0
    else
        _num_board_list[i]=num_board_list[i]
    endif

    if _switch_board2_list[i]=0 then
        _num_board2_list[i]=0
    else
        _num_board2_list[i]=num_board2_list[i]
    endif
next i

parameters num_board_list=_num_board_list
parameters num_board2_list=_num_board2_list
values "num_board_list" range[1,3]
values "num_board2_list" range[1,3]


!ボード厚みリスト
dim _thi_board_list[][]
dim _thi_board2_list[][]
_thi_board_list[1][1]=0
_thi_board2_list[1][1]=0

for i=1 to lgs_num
    for j=1 to 3
        if j<=_num_board_list[i] then
            _thi_board_list[i][j]=max(thi_board_list[i][j],0.006)
        else
            _thi_board_list[i][j]=0
        endif
    next j

    for j=1 to 3
        if j<=_num_board2_list[i] then
            _thi_board2_list[i][j]=max(thi_board2_list[i][j],0.006)
        else
            _thi_board2_list[i][j]=0
        endif
    next j
next i

parameters thi_board_list=_thi_board_list
parameters thi_board2_list=_thi_board2_list
values{2} "thi_board_list" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21",0,"なし"
values{2} "thi_board2_list" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21",0,"なし"


!ボード種類リスト
dim _type_board_list[][]
dim _type_board2_list[][]
_type_board_list[1][1]=0
_type_board2_list[1][1]=0

for i=1 to lgs_num
    for j=1 to 3
        if j<=_num_board_list[i] then
            _type_board_list[i][j]=max(type_board_list[i][j],1)
        else
            _type_board_list[i][j]=0
        endif
    next j

    for j=1 to 3
        if j<=_num_board2_list[i] then
            _type_board2_list[i][j]=max(type_board2_list[i][j],1)
        else
            _type_board2_list[i][j]=0
        endif
    next j
next i

parameters type_board_list=_type_board_list
parameters type_board2_list=_type_board2_list
values{2} "type_board_list" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード",0,"なし"
values{2} "type_board2_list" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード",0,"なし"


!ボードサイズリスト
dim _size_board_list[][]
dim _size_board2_list[][]
_size_board_list[1][1]=1
_size_board2_list[1][1]=1

for i=1 to lgs_num
    for j=1 to 3
        _size_board_list[i][j]=size_board_list[i][j]
        _size_board2_list[i][j]=size_board2_list[i][j]
    next j
next i

parameters size_board_list=_size_board_list
parameters size_board2_list=_size_board2_list
values{2} "size_board_list" 1,"3x6版",2,"3x8版",3,"3x9版",4,"メートル版",5,"2x6版"
values{2} "size_board2_list" 1,"3x6版",2,"3x8版",3,"3x9版",4,"メートル版",5,"2x6版"


!ボード面積リスト
dim _area_board_list[][]
dim _area_board2_list[][]
_area_board_list[1][1]=1
_area_board2_list[1][1]=1

for i=1 to lgs_num
    for j=1 to 3
        if j<=_num_board_list[i] then
            _area_board_list[i][j]=area_board_list[i][j]
        else
            _area_board_list[i][j]=0
        endif
    next j

    for j=1 to 3
        if j<=_num_board2_list[i] then
            _area_board2_list[i][j]=area_board2_list[i][j]
        else
            _area_board2_list[i][j]=0
        endif
    next j
next i

parameters area_board_list=_area_board_list
parameters area_board2_list=_area_board2_list
values "area_board_list" range[0,]
values "area_board2_list" range[0,]


!ボード枚数リスト
dim _totle_num_board_list[][]
dim _totle_num_board2_list[][]
_totle_num_board_list[1][1]=0
_totle_num_board2_list[1][1]=0

for i=1 to lgs_num
    for j=1 to 3
        if j<=_num_board_list[i] then
            _totle_num_board_list[i][j]=totle_num_board_list[i][j]
        else
            _totle_num_board_list[i][j]=0
        endif
    next j

    for j=1 to 3
        if j<=_num_board2_list[i] then
            _totle_num_board2_list[i][j]=totle_num_board2_list[i][j]
        else
            _totle_num_board2_list[i][j]=0
        endif
    next j
next i

parameters totle_num_board_list=_totle_num_board_list
parameters totle_num_board2_list=_totle_num_board2_list
values "totle_num_board_list" range[0,]
values "totle_num_board2_list" range[0,]



!==========================================================ボード集計
!ボード面積集計リスト
dim _board_area_list[][]
for i=1 to 10
    for j=1 to 30
        _board_area_list[i][j]=0
    next j
next i

for i=1 to lgs_num
    !表側
    if _board_effect_list[i][1] and _switch_board_list[i] then
        for j=1 to _num_board_list[i]
            _board_area_list[_type_board_list[i][j]][_thi_code[_thi_board_list[i][j]*10000]+(_size_board_list[i][j]-1)*6]=\
            _board_area_list[_type_board_list[i][j]][_thi_code[_thi_board_list[i][j]*10000]+(_size_board_list[i][j]-1)*6]+_area_board_list[i][j]
        next j
    endif

    !裏側
    if _board_effect_list[i][2] and _switch_board2_list[i] then
        for j=1 to _num_board2_list[i]
            _board_area_list[_type_board2_list[i][j]][_thi_code[_thi_board2_list[i][j]*10000]+(_size_board2_list[i][j]-1)*6]=\
            _board_area_list[_type_board2_list[i][j]][_thi_code[_thi_board2_list[i][j]*10000]+(_size_board2_list[i][j]-1)*6]+_area_board2_list[i][j]
        next j
    endif
next i

parameters board_area_list=_board_area_list


!ボード枚数集計リスト
dim _board_num_list[][]
for i=1 to 10
    for j=1 to 30
        _board_num_list[i][j]=0
    next j
next i

for i=1 to lgs_num
    !表側
    if _board_effect_list[i][1] and _switch_board_list[i] then
        for j=1 to _num_board_list[i]
            _board_num_list[_type_board_list[i][j]][_thi_code[_thi_board_list[i][j]*10000]+(_size_board_list[i][j]-1)*6]=\
            _board_num_list[_type_board_list[i][j]][_thi_code[_thi_board_list[i][j]*10000]+(_size_board_list[i][j]-1)*6]+_totle_num_board_list[i][j]
        next j
    endif

    !裏側
    if _board_effect_list[i][2] and _switch_board2_list[i] then
        for j=1 to _num_board2_list[i]
            _board_num_list[_type_board2_list[i][j]][_thi_code[_thi_board2_list[i][j]*10000]+(_size_board2_list[i][j]-1)*6]=\
            _board_num_list[_type_board2_list[i][j]][_thi_code[_thi_board2_list[i][j]*10000]+(_size_board2_list[i][j]-1)*6]+_totle_num_board2_list[i][j]
        next j
    endif
next i

parameters board_num_list=_board_num_list


!ボード種類総数・種類表記・面積・枚数
dim _board_type_totlist[][]
dim _board_type_totmoji[][]
dim _board_area_totlist[]
dim _board_num_totlist[]
_board_type_totlist[1][1]=0
_board_type_totlist[1][2]=0
_board_type_totlist[1][3]=0
_board_type_totmoji[1][1]=""
_board_type_totmoji[1][2]=""
_board_type_totmoji[1][3]=""
_board_area_totlist[1]=0
_board_num_totlist[1]=0

if customize_estimate=0 then
    !自動集計
    board_type_totnum=0

    for i=1 to 10
        for j=1 to 30
            if _board_num_list[i][j]>0 then
                board_type_totnum=board_type_totnum+1
                _board_type_totlist[board_type_totnum][1]=i
                _board_type_totlist[board_type_totnum][2]=_thi_value[j-(ceil(j/6)-1)*6]*1000
                _board_type_totlist[board_type_totnum][3]=ceil(j/6)
                _board_type_totmoji[board_type_totnum][1]=_type_moji[i]
                _board_type_totmoji[board_type_totnum][2]=_thi_moji[j-(ceil(j/6)-1)*6]
                _board_type_totmoji[board_type_totnum][3]=_size_moji[ceil(j/6)]
                _board_area_totlist[board_type_totnum]=_board_area_list[i][j]
                if board_num_ceil=0 then
                    _board_num_totlist[board_type_totnum]=_board_num_list[i][j]
                else
                    _board_num_totlist[board_type_totnum]=ceil(_board_num_list[i][j])
                endif
            endif
        next j
    next i
else
    !手動集計
    board_type_totnum=board_type_totnum
    values "board_type_totnum" range[0,]

    for i=1 to board_type_totnum
        _board_type_totmoji[i][1]=board_type_totmoji[i][1]
        _board_type_totmoji[i][2]=board_type_totmoji[i][2]
        _board_type_totmoji[i][3]=board_type_totmoji[i][3]
        _board_area_totlist[i]=board_area_totlist[i]
        _board_num_totlist[i]=board_num_totlist[i]
    next i
endif


parameters board_type_totnum=board_type_totnum
parameters board_type_totlist=_board_type_totlist
parameters board_type_totmoji=_board_type_totmoji
parameters board_area_totlist=_board_area_totlist
parameters board_num_totlist=_board_num_totlist



!==========================================================表示設定
if dis_board_detail=0 then hideparameter "dis_board_area_detail","board_num_ceil"
if dis_room_name=0 and dis_board_detail=0 then hideparameter "dis_arrow","dis_form"
if dis_lgs=0 then hideparameter "lgs_pen","dis_lgs_num"
if dis_3d=0 then hideparameter "m_3Dmoji","moji_thi"

values{2} "switch_hotspot" 1,"ゾーンの頂点",2,"LGSの頂点"