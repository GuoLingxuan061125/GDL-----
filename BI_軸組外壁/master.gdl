code=1
td=1000
eps=1e-5


!================================================================================壁設定
values "thi_dannetsu" range(0,wid_jiku]
values{2} "wid_jiku" 0.105,"105角",0.12,"120角"
values{2} "wid2_jiku" 0.03,"30",0.045,"45"
values{2} "pattern" 1,"柱ー間柱ー柱",2,"柱ー間柱ー間柱ー柱"
values{2} "pos_dannetsu" 1,"内側",2,"外側"
values "pitch" range[0.5,)

!壁長さ
len=sqr((coo_end[1]-coo_start[1])^2+(coo_end[2]-coo_start[2])^2)
parameters len=len
lock "len"

!壁回転角
angle=0
if coo_end[2]>coo_start[2]+eps then
	angle=acs((coo_end[1]-coo_start[1])/len)
endif
if coo_end[2]<coo_start[2]-eps then
	angle=-acs((coo_end[1]-coo_start[1])/len)
endif
if coo_end[2]<=coo_start[2]+eps and coo_end[2]>=coo_start[2]-eps then
	if coo_end[1]>=coo_start[1] then
		angle=0.00
	endif
	if coo_end[1]<coo_start[1] then
		angle=180.00
	endif
endif
parameters angle=angle

absx=len-sqr(coo_end[1]^2+coo_end[2]^2)


!==============================================================================================================開口設定
if switch_op then
	values "win_num" range[1,]
else
	parameters win_num=0
endif

if switch_op then
	for i=1 to win_num
		parameters win_type[i]=win_type[i]
		parameters win_xz[i][1]=win_xz[i][1]
		parameters win_xz[i][2]=win_xz[i][2]
		parameters win_wid[i]=win_wid[i]
		parameters win_hei[i]=win_hei[i]
		parameters win_ref[i]=win_ref[i]
	next i
else
	hideparameter "win_type","win_xz","win_wid","win_hei","win_num","win_ref","offset_door1","offset_door2","offset_op1","offset_op2","offset_op3","win_ref_wid","seal_wid","seal_thi",\
			"m_op_seal_1","switch_seal_op_side","switch_seal_op_top","m_op_seal_3","switch_seal_op_down","m_op_seal_2","switch_seal_op_rat","op_rat","op_rat_offset"
endif

values{2} "win_ref" 1,"あり",2,"なし"
values{2} "win_type" 1,"扉",2,"窓"
values{2} "win_ref_wid" 0.03,"30",0.045,"45"



!==========================================================開口実寸
if switch_op then
	for i=1 to win_num
		if win_type[i]=1 then
			parameters win_xz2[i][1]=win_xz[i][1]-offset_door1
			parameters win_xz2[i][2]=win_xz[i][2]
			parameters win_wid2[i]=win_wid[i]+2*offset_door1
			parameters win_hei2[i]=win_hei[i]+offset_door2
		endif
		if win_type[i]=2 then
			parameters win_xz2[i][1]=win_xz[i][1]-offset_op1
			parameters win_xz2[i][2]=win_xz[i][2]-offset_op3
			parameters win_wid2[i]=win_wid[i]+2*offset_op1
			parameters win_hei2[i]=win_hei[i]+offset_op2+offset_op3
		endif
	next i
endif


!==========================================================開口部シーリング
values "seal_wid" range(0,]
values "seal_thi" range(0,]

dim _switch_seal_op_side[]
dim _switch_seal_op_top[]
dim _switch_seal_op_down[]
dim _switch_seal_op_rat[]

for i=1 to max(win_num,1)
	_switch_seal_op_side[i]=switch_seal_op_side[i]
	_switch_seal_op_top[i]=switch_seal_op_top[i]
	_switch_seal_op_down[i]=switch_seal_op_down[i]
	_switch_seal_op_rat[i]=switch_seal_op_rat[i]
next i

parameters switch_seal_op_side=_switch_seal_op_side
parameters switch_seal_op_top=_switch_seal_op_top
parameters switch_seal_op_down=_switch_seal_op_down
parameters switch_seal_op_rat=_switch_seal_op_rat


!==============================================================================================================梁開口設定
if switch_beam then
	values "beam_num" range[1,]
else
	parameters beam_num=0
endif

if switch_beam then
	for i=1 to beam_num
		parameters beam_x[i]=beam_x[i]
		parameters beam_wid[i]=beam_wid[i]
		parameters beam_hei[i]=beam_hei[i]
		parameters beam_ref[i][1]=beam_ref[i][1]
		parameters beam_ref[i][2]=beam_ref[i][2]
	next i
else
	hideparameter "beam_num","beam_x","beam_wid","beam_hei","beam_ref"
endif

values{2} "beam_ref" 1,"あり",2,"なし"


!==============================================================================================================段差設定
if switch_floor then
	values "floor_num" range[1,]
else
	parameters floor_num=0
endif

if switch_floor then
	for i=1 to floor_num
		parameters floor_x[i]=floor_x[i]
		parameters floor_wid[i]=floor_wid[i]
		parameters floor_hei[i]=floor_hei[i]
	next i
else
	hideparameter "floor_num","floor_x","floor_wid","floor_hei"
endif


!==============================================================================================================合板設定
if switch_gouhan then
	values{2} "thi_gouhan" 0.009,"9",0.012,"12"
	values{2} "size_gouhan" 1,"910*1820",2,"910*2730",3,"910*3010"
	
	if size_gouhan=1 then
		parameters wid_gouhan=0.91
		parameters hei_gouhan=1.82
	endif
	
	if size_gouhan=2 then
		parameters wid_gouhan=0.91
		parameters hei_gouhan=2.73
	endif
	
	if size_gouhan=3 then
		parameters wid_gouhan=0.91
		parameters hei_gouhan=3.01
	endif
else
	values{2} "thi_gouhan" 0,""
	lock "thi_gouhan"
endif


!==============================================================================================================ボード
if switch_board then
	values "num_board" range[1,3]

	for i=1 to num_board
		parameters offset_start[i]=offset_start[i]
		parameters offset_end[i]=offset_end[i]
		parameters offset_up[i]=offset_up[i]
		parameters offset_down[i]=offset_down[i]
	next i

	values{2} "thi_board" 0.006,"6.0",0.009,"9.0",0.0125,"12.5",0.015,"15",0.021,"21"
	if num_board>0 then
		values{2} "thi_board_1" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board[1]=thi_board_1
	endif
	if num_board>1 then
		values{2} "thi_board_2" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board[2]=thi_board_2
	endif
	if num_board>2 then
		values{2} "thi_board_3" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board[3]=thi_board_3
	endif

	values{2} "type_board" 5,"強化石こうボード",2,"ケイカルボード"
	if num_board>0 then
		values{2} "type_board_1" 5,"強化石こうボード",2,"ケイカルボード"
		parameters type_board[1]=type_board_1
	endif
	if num_board>1 then
		values{2} "type_board_2" 5,"強化石こうボード",2,"ケイカルボード"
		parameters type_board[2]=type_board_2
	endif
	if num_board>2 then
		values{2} "type_board_3" 5,"強化石こうボード",2,"ケイカルボード"
		parameters type_board[3]=type_board_3
	endif

	values{2} "size_board" 1,"3x6版",2,"3x8版",3,"3x9版",4,"メートル版",5,"2x6版"

	if size_board=1 then
		parameters wid_bo=0.91
		parameters hei_bo=1.82
	endif
	
	if size_board=2 then
		parameters wid_bo=0.91
		parameters hei_bo=2.42
	endif
	
	if size_board=3 then
		parameters wid_bo=0.91
		parameters hei_bo=2.73
	endif
	
	if size_board=4 then
		parameters wid_bo=1
		parameters hei_bo=2
	endif

	if size_board=5 then
		parameters wid_bo=0.606
		parameters hei_bo=1.82
	endif
else
	parameters num_board=0
	values{2} "thi_board" 0,""
	values{2} "type_board" 0,""
	lock "thi_board","type_board","size_board","offset_start","offset_end","offset_up","offset_down","num_board"
	hideparameter "thi_board","type_board","size_board","offset_start","offset_end","offset_up","offset_down"
endif

if num_board<3 then
	values{2} "thi_board_3" 0,""
	values{2} "type_board_3" 0,""
	lock "thi_board_3","type_board_3"
endif

if num_board<2 then
	values{2} "thi_board_2" 0,""
	values{2} "type_board_2" 0,""
	lock "thi_board_2","type_board_2"
endif

if num_board<1 then
	values{2} "thi_board_1" 0,""
	values{2} "type_board_1" 0,""
	lock "thi_board_1","type_board_1"
endif


if switch_board2 then
	values "num_board2" range[1,3]

	for i=1 to num_board2
		parameters offset_start2[i]=offset_start2[i]
		parameters offset_end2[i]=offset_end2[i]
		parameters offset_up2[i]=offset_up2[i]
		parameters offset_down2[i]=offset_down2[i]
	next i

	values{2} "thi_board2" 0.006,"6.0",0.009,"9.0",0.0125,"12.5",0.015,"15",0.021,"21"
	if num_board2>0 then
		values{2} "thi_board2_1" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board2[1]=thi_board2_1
	endif
	if num_board2>1 then
		values{2} "thi_board2_2" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board2[2]=thi_board2_2
	endif
	if num_board2>2 then
		values{2} "thi_board2_3" 0.006,"6.0",0.009,"9.0",0.0095,"9.5",0.0125,"12.5",0.015,"15",0.021,"21"
		parameters thi_board2[3]=thi_board2_3
	endif	

	values{2} "type_board2" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
	if num_board2>0 then
		values{2} "type_board2_1" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board2[1]=type_board2_1
	endif
	if num_board2>1 then
		values{2} "type_board2_2" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board2[2]=type_board2_2
	endif
	if num_board2>2 then
		values{2} "type_board2_3" 1,"石こうボード",2,"ケイカルボード",3,"硬質石こうボード",4,"耐水ボード",5,"強化石こうボード",6,"構造用石こうボード",7,"石こうラスボード",8,"化粧石こうボード",9,"不燃積層石こうボード",10,"吸放湿石こうボード"
		parameters type_board2[3]=type_board2_3
	endif

	values{2} "size_board2" 1,"3x6版",2,"3x8版",3,"3x9版",4,"メートル版",5,"2x6版"

	if size_board2=1 then
		parameters wid_bo2=0.91
		parameters hei_bo2=1.82
	endif
	
	if size_board2=2 then
		parameters wid_bo2=0.91
		parameters hei_bo2=2.42
	endif
	
	if size_board2=3 then
		parameters wid_bo2=0.91
		parameters hei_bo2=2.73
	endif
	
	if size_board2=4 then
		parameters wid_bo2=1
		parameters hei_bo2=2
	endif

	if size_board2=5 then
		parameters wid_bo2=0.606
		parameters hei_bo2=1.82
	endif
else
	parameters num_board2=0
	values{2} "thi_board2" 0,""
	values{2} "type_board2" 0,""
	lock "thi_board2","type_board2","size_board2","offset_start2","offset_end2","offset_up2","offset_down2","num_board2"
	hideparameter "thi_board2","type_board2","size_board2","offset_start2","offset_end2","offset_up2","offset_down2"
endif

if num_board2<3 then
	values{2} "thi_board2_3" 0,""
	values{2} "type_board2_3" 0,""
	lock "thi_board2_3","type_board2_3"
endif

if num_board2<2 then
	values{2} "thi_board2_2" 0,""
	values{2} "type_board2_2" 0,""
	lock "thi_board2_2","type_board2_2"
endif

if num_board2<1 then
	values{2} "thi_board2_1" 0,""
	values{2} "type_board2_1" 0,""
	lock "thi_board2_1","type_board2_1"
endif


!==============================================================================================================化粧板設定
if switch_panel then
	values{2} "type_panel" 1,"キッチンパネル",2,"不燃化粧板",3,"メラミン化粧板",4,"化粧ケイカル(目透)",5,"化粧ケイカル(突付)",6,"グラスウールボード"
	
	if type_panel=1 then
		values{2} "thi_panel" 0.003,"3mm"
		values{2} "size_panel" 1,"3x6",2,"3x8",3,"3x9",4,"4x8"
	endif
	
	if type_panel=2 then
		values{2} "thi_panel" 0.003,"3mm",0.004,"4mm",0.006,"6mm",0.0145,"14.5mm"
		values{2} "size_panel" 0,"900*900",1,"3x6",2,"3x8",3,"3x9"
	endif
	
	if type_panel=3 then
		values{2} "thi_panel" 0.00095,"0.95mm",0.0012,"1.2mm"
		values{2} "size_panel" 1,"3x6",4,"4x8"
	endif
	
	if type_panel=4 or type_panel=5 then
		values{2} "thi_panel" 0.006,"6mm"
		values{2} "size_panel" 1,"3x6",2,"3x8",3,"3x9"
	endif
	
	if type_panel=6 then
		values{2} "thi_panel" 0.025,"25mm",0.05,"50mm"
		values{2} "size_panel" 6,"605*910",1,"3x6"
	endif
	
	if size_panel=0 then 
		parameters wid_panel=0.9
		parameters hei_panel=0.9
	endif
	
	if size_panel=1 then 
		parameters wid_panel=0.91
		parameters hei_panel=1.82
	endif
	
	if size_panel=2 then 
		parameters wid_panel=0.91
		parameters hei_panel=2.42
	endif
	
	if size_panel=3 then 
		parameters wid_panel=0.91
		parameters hei_panel=2.73
	endif
	
	if size_panel=4 then 
		parameters wid_panel=1.21
		parameters hei_panel=2.42
	endif
	
	if size_panel=6 then 
		parameters wid_panel=0.605
		parameters hei_panel=0.91
	endif
else
	values{2} "type_panel" 0,""
	values{2} "thi_panel" 0,""
	values{2} "size_panel" 0,""
	hideparameter "type_panel","thi_panel","size_panel","offset_start_p","offset_end_p","offset_up_p","offset_down_p"
	lock "type_panel","thi_panel","size_panel","offset_start_p","offset_end_p","offset_up_p","offset_down_p"
endif


!==============================================================================================================サイデイング
values{2} "ref_line" 1,"壁外側",2,"壁中心",3,"壁内側"

if ref_line=1 then 
	hideparameter "offset_line"
endif

if ref_line=1 then plus_all=0
if ref_line=2 then plus_all=offset_line/2
if ref_line=3 then plus_all=offset_line

move_y=-wid_jiku/2

if switch_gouhan then
	move_y=move_y-thi_gouhan
endif

if switch_board then
	for i=1 to num_board
		move_y=move_y-thi_board[i]
	next i
endif

values{2} "menu_len" 1820,"1820mm",3030,"3030mm",-1,"カスタム設定"
values{2} "menu_wid" 455,"455mm",910,"910mm",1000,"1000mm",-1,"カスタム設定"
values{2} "menu_thi" 14,"14mm",15,"15mm",16,"16mm",18,"18mm",21,"21mm",-1,"カスタム設定"
values{2} "direction" 1,"横並び",2,"縦並び"

if menu_len<>-1 then hideparameter "sid_len"
if menu_wid<>-1 then hideparameter "sid_wid"
if menu_thi<>-1 then hideparameter "sid_thi"

values{2} "corner_L" 0,"なし",1,"出隅",2,"入隅",3,"出隅と接合",4,"入隅と接合"
values{2} "corner_R" 0,"なし",1,"出隅",2,"入隅",3,"出隅と接合",4,"入隅と接合"

!軸組壁オフセット
wallStartOffset=0
wallEndOffset=0

if corner_L=0 then
	wallStartOffset=0
endif

if corner_L=1 then
	wallStartOffset=-(sid_thi+0.001+wid_d+0.001+abs(move_y+wid_jiku/2)-plus_all)
endif

if corner_L=2 then
	wallStartOffset=(sid_thi+0.001+wid_d+0.001+abs(move_y-wid_jiku/2)-plus_all)
endif

if corner_L=3 then
	wallStartOffset=-(sid_thi+0.001+wid_d+0.001+abs(move_y+wid_jiku/2)-plus_all)
endif

if corner_L=4 then
	wallStartOffset=(sid_thi+0.001+wid_d+0.001+abs(move_y-wid_jiku/2)-plus_all)
endif

if corner_R=0 then
	wallEndOffset=0
endif

if corner_R=1 then
	wallEndOffset=-(sid_thi+0.001+wid_d+0.001+abs(move_y+wid_jiku/2)-plus_all)
endif

if corner_R=2 then
	wallEndOffset=(sid_thi+0.001+wid_d+0.001+abs(move_y-wid_jiku/2)-plus_all)
endif

if corner_R=3 then
	wallEndOffset=-(sid_thi+0.001+wid_d+0.001+abs(move_y+wid_jiku/2)-plus_all)
endif

if corner_R=4 then
	wallEndOffset=(sid_thi+0.001+wid_d+0.001+abs(move_y-wid_jiku/2)-plus_all)
endif

if menu_len<>-1 then parameters sid_len=menu_len/td
if menu_wid<>-1 then parameters sid_wid=menu_wid/td
if menu_thi<>-1 then parameters sid_thi=menu_thi/td

values{2} "joiner_wid" 0.008,"8mm",0.01,"10mm"
values{2} "corner_wid" 0.07,"70角",0.075,"75角",0.08,"80角",0.085,"85角",0.09,"90角",0.12,"120角"


!裁断多角形設定
values "num_polygon" range[0,]

if switch_polygon=0 then
	hideparameter "num_polygon","point_polygon","coo_polygon"
endif

dim _point_polygon[]
_point_polygon[1]=3

dim _coo_polygon[][]
_coo_polygon[1][1]=0
_coo_polygon[2][1]=0
_coo_polygon[3][1]=0
_coo_polygon[4][1]=0
_coo_polygon[5][1]=0
_coo_polygon[6][1]=0
_coo_polygon[1][2]=0
_coo_polygon[2][2]=0
_coo_polygon[3][2]=0
_coo_polygon[4][2]=0
_coo_polygon[5][2]=0
_coo_polygon[6][2]=0

if num_polygon>0 then
	for i=1 to num_polygon
		_point_polygon[i]=max(3,point_polygon[i])
	
		for j=1 to _point_polygon[i]*2
			_coo_polygon[j][i]=coo_polygon[j][i]
		next j
	next i
endif

parameters point_polygon=_point_polygon
parameters coo_polygon=_coo_polygon

dim polygon_minx[]
dim polygon_maxx[]
dim polygon_miny[]
dim polygon_maxy[]

for i=1 to num_polygon
	for j=1 to _point_polygon[i]
		put _coo_polygon[2*j-1][i]
	next j
	
	polygon_minx[i]=min(use(nsp))
	polygon_maxx[i]=max(get(nsp))

	for j=1 to _point_polygon[i]
		put _coo_polygon[2*j][i]
	next j

	polygon_miny[i]=min(use(nsp))
	polygon_maxy[i]=max(get(nsp))
next i


if corner_L=0 then
	parameters offset_start_d=0
	parameters offset_start_m=0
	parameters offset_start_b=0

	plus_board=0
	if switch_board then
		if num_board>0 then
			for i=num_board to 1
				parameters offset_start[i]=0
				plus_board=plus_board+thi_board[i]
			next i
		endif
	endif

	if switch_gouhan then
		parameters offset_start_gh=0
	endif
endif

if corner_L=1 then 
	parameters offset_start_d=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_start_m=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_start_b=-sid_thi-0.001-wid_d+plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
			for i=num_board to 1
				parameters offset_start[i]=-sid_thi-0.001-wid_d-0.001-plus_board+plus_all
				plus_board=plus_board+thi_board[i]
			next i
		endif
	endif

	if switch_gouhan then
		parameters offset_start_gh=-sid_thi-0.001-wid_d-0.001-plus_board+plus_all
	endif
endif

if corner_R=0 then 
	parameters offset_end_d=0
	parameters offset_end_m=0
	parameters offset_end_b=0

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			parameters offset_end[i]=0
			plus_board=plus_board+thi_board[i]
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_end_gh=0
	endif
endif

if corner_R=1 then 
	parameters offset_end_d=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_end_m=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_end_b=-sid_thi-0.001-wid_d+plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			parameters offset_end[i]=-sid_thi-0.001-wid_d-0.001-plus_board+plus_all
			plus_board=plus_board+thi_board[i]
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_end_gh=-sid_thi-0.001-wid_d-0.001-plus_board+plus_all
	endif
endif

if corner_L=2 then
	parameters offset_start_d=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_start_m=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_start_b=sid_thi+0.001+wid_d+0.001-plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			plus_board=plus_board+thi_board[i]
			parameters offset_start[i]=sid_thi+0.001+wid_d+0.001+plus_board-plus_all
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_start_gh=sid_thi+0.001+wid_d+0.001+plus_board+thi_gouhan-plus_all
	endif
endif

if corner_R=2 then 
	parameters offset_end_d=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_end_m=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_end_b=sid_thi+0.001+wid_d+0.001-plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			plus_board=plus_board+thi_board[i]
			parameters offset_end[i]=sid_thi+0.001+wid_d+0.001+plus_board-plus_all
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_end_gh=sid_thi+0.001+wid_d+0.001+plus_board+thi_gouhan-plus_all
	endif
endif

if corner_L=3 then
	parameters offset_start_d=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_start_m=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_start_b=-sid_thi-0.001-wid_d-0.001+plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			plus_board=plus_board+thi_board[i]
			parameters offset_start[i]=-sid_thi-0.001-wid_d-0.001-plus_board+plus_all
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_start_gh=-sid_thi-0.001-wid_d-0.001-plus_board-thi_gouhan+plus_all
	endif
endif

if corner_R=3 then
	parameters offset_end_d=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_end_m=-corner_wid-sid_thi+wid2_d/2-joiner_wid/2+plus_all
	parameters offset_end_b=-sid_thi-0.001-wid_d-0.001+plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			plus_board=plus_board+thi_board[i]
			parameters offset_end[i]=-sid_thi-0.001-wid_d-0.001-plus_board+plus_all
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_end_gh=-sid_thi-0.001-wid_d-0.001-plus_board-thi_gouhan+plus_all
	endif
endif

if corner_L=4 then
	parameters offset_start_d=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_start_m=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_start_b=sid_thi+0.001+wid_d-plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			parameters offset_start[i]=sid_thi+0.001+wid_d+0.001+plus_board-plus_all
			plus_board=plus_board+thi_board[i]
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_start_gh=sid_thi+0.001+wid_d+0.001+plus_board-plus_all
	endif
endif

if corner_R=4 then 
	parameters offset_end_d=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_end_m=-corner_wid+wid2_d/2-joiner_wid/2-plus_all
	parameters offset_end_b=sid_thi+0.001+wid_d-plus_all

	plus_board=0
	if switch_board then
		if num_board>0 then
		for i=num_board to 1
			parameters offset_end[i]=sid_thi+0.001+wid_d+0.001+plus_board-plus_all
			plus_board=plus_board+thi_board[i]
		next i
		endif
	endif

	if switch_gouhan then
		parameters offset_end_gh=sid_thi+0.001+wid_d+0.001+plus_board-plus_all
	endif
endif

if siding_auto then
	if direction=1 then
		if siding_up>=siding_down-hei and siding_up<1.5*sid_wid+siding_down-hei then 
			parameters siding_up=sid_wid+siding_down-hei
		endif
	
		for i=1 to 1000
			if siding_up>=(0.5+i)*sid_wid+siding_down-hei and siding_up<(1.5+i)*sid_wid+siding_down-hei then
				parameters siding_up=(1+i)*sid_wid+siding_down-hei
			endif
		next i
	else
		if siding_up>=siding_down-hei and siding_up<1.5*sid_len+siding_down-hei then 
			parameters siding_up=sid_len+siding_down-hei
		endif
	
		for i=1 to 1000
			if siding_up>=(0.5+i)*sid_len+siding_down-hei and siding_up<(1.5+i)*sid_len+siding_down-hei then
				parameters siding_up=(1+i)*sid_len+siding_down-hei
			endif
		next i
	endif
endif

if roof_cut then
	parameters siding_auto=0
	parameters siding_up=0
else
	hideparameter "cut_xzL","cut_xzR"
endif


!==============================================================================================================内側サイデイング(パラペット利用)
if switch_siding_back then
	parameters switch_panel=0
endif

move_y2=wid_jiku/2

if switch_board2 then
	for i=1 to num_board2
		move_y2=move_y2+thi_board2[i]
	next i
endif

values{2} "corner_L2" 0,"なし",1,"出隅",2,"入隅"
values{2} "corner_R2" 0,"なし",1,"出隅",2,"入隅"
values{2} "corner_wid2" 0.07,"70角",0.075,"75角",0.08,"80角",0.085,"85角",0.09,"90角",0.12,"120角"
values{2} "wid_shitaji" 0.03,"30",0.045,"45"


!==============================================================================================================付属品(水切り・見切り・外巾木)
!巾木
dim _baseboard_thi[]
dim _baseboard_m[]
_baseboard_thi[1]=0
_baseboard_m[1]=0

for i=1 to baseboard_num
    _baseboard_thi[i]=baseboard_thi[i]
    _baseboard_m[i]=baseboard_m[i]
next i

parameters \
baseboard_thi=_baseboard_thi,
baseboard_m=_baseboard_m


!================================================================================柱・間柱　本数と座標リスト計算
h_num=ceil((len+wallStartOffset+wallEndOffset-wid_jiku)/pitch)-1+switch_h_start+switch_h_end
dim _h_coo[],_h_flag[]
_h_coo[1]=0
_h_flag[1]=0

for i=1 to h_num
	if switch_change_coo=0 then
		if switch_h_end and i=h_num then
			_h_coo[i]=len+wallEndOffset-wid_jiku/2
		else
			_h_coo[i]=-wallStartOffset+wid_jiku/2+(i-switch_h_start)*pitch
		endif
	else
		_h_coo[i]=h_coo[i]
	endif
next i

for i=1 to h_num
	if switch_op then
		_h_flag[i]=1

		for j=1 to win_num
			if _h_coo[i]>=win_xz2[j][1]+absx and _h_coo[i]<=win_xz2[j][1]+win_wid2[j]+absx then
				_h_flag[i]=0
			endif
		next j
	else
		_h_flag[i]=1
	endif
next i

parameters \
h_num=h_num,
h_coo=_h_coo,
h_flag=_h_flag

mb_pitch1=pitch/(pattern+1)
fullSpan=ceil((len+wallStartOffset+wallEndOffset-wid_jiku)/pitch)-1
mb_num1=fullSpan*pattern
mb_num2=ceil(((len+wallStartOffset+wallEndOffset-wid_jiku)-fullSpan*pitch)/mb_pitch1)-1
mb_pitch2=((len+wallStartOffset+wallEndOffset-wid_jiku)-fullSpan*pitch)/(mb_num2+1)
mb_num=mb_num1+mb_num2

dim _mb_coo[],_mb_flag[]
_mb_coo[1]=0
_mb_flag[1]=0

for i=1 to mb_num1+mb_num2
	if switch_change_coo=0 then
		if i<=mb_num1 then
			_mb_coo[i]=-wallStartOffset+wid_jiku/2+ceil(i/pattern)*pitch-(1+pattern*fra(i/pattern))*mb_pitch1
		else
			_mb_coo[i]=-wallStartOffset+fullSpan*pitch+wid_jiku/2+(i-mb_num1)*mb_pitch2
		endif
	else
		_mb_coo[i]=mb_coo[i]
	endif
next i

for i=1 to mb_num
	if switch_op then
		_mb_flag[i]=1

		for j=1 to win_num
			if _mb_coo[i]>=win_xz2[j][1]+absx and _mb_coo[i]<=win_xz2[j][1]+win_wid2[j]+absx then
				_mb_flag[i]=0
			endif
		next j
	else
		_mb_flag[i]=1
	endif
next i

parameters \
mb_num=mb_num,
mb_coo=_mb_coo,
mb_flag=_mb_flag


!================================================================================胴縁本数と座標
num_d=0
dim _doubuchi_coo[]
_doubuchi_coo[1]=0

if switch_siding then
	for i=1 to h_num
		if _h_coo[i]>=wid2_d/2 and _h_coo[i]<=len-wid2_d/2 then
			num_d=num_d+1
			_doubuchi_coo[num_d]=_h_coo[i]
		endif
	next i

	if switch_h_start=0 and -wallStartOffset+wid_jiku/2>=0 then
		num_d=num_d+1
		_doubuchi_coo[num_d]=-wallStartOffset+wid_jiku/2
	endif

	if switch_h_end=0 and len+wallEndOffset-wid_jiku/2<=len then
		num_d=num_d+1
		_doubuchi_coo[num_d]=len+wallEndOffset-wid_jiku/2
	endif

	for i=1 to mb_num
		if _mb_coo[i]>=wid2_d/2 and _mb_coo[i]<=len-wid2_d/2 then
			num_d=num_d+1
			_doubuchi_coo[num_d]=_mb_coo[i]
		endif
	next i
endif

parameters \
num_d=num_d,
doubuchi_coo=_doubuchi_coo


!基準フロアで自動割付
nowfloor_index=0
nowfloor_name=""
n = REQUEST ("Home_story", "", nowfloor_index, nowfloor_name)
if nowfloor_index>=0 then
    nowfloor_index=nowfloor_index+1
endif

dim t[]
n=REQUEST ("Story_info","",nr,t)

dim floor_index[],floor_name[]
floor_index[1]=0 : floor_name[1]="今の配置フロア"

for i=1 to nr
    if t[4*i-3]>=0 then
        t[4*i-3]=t[4*i-3]+1
    endif

    floor_index[i+1]=t[4*i-3]
	floor_name[i+1]=str(floor_index[i+1],1,0)+". "+t[4*i-2]
next i

values{2} "level_standard" floor_index,floor_name
if level_allocation then
	hideparameter "allo_z_offset"
else
	hideparameter "level_standard","level_offset"
endif

if level_standard=0 then
	standardfloor_index=nowfloor_index
else
	standardfloor_index=level_standard
endif

standardfloor_z=0
for i=1 to nr
    if t[4*i-3]=standardfloor_index then
        standardfloor_z=t[4*i-1]
    endif
next i

nowpos_z=SYMB_POS_Z

if level_allocation=1 then
    allo_z_offset=standardfloor_z-nowpos_z+level_offset
endif

allo_z_offset=allo_z_offset-int(allo_z_offset/sid_wid)*sid_wid

